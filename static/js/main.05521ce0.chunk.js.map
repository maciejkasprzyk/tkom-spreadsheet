{"version":3,"sources":["parser/lexer.js","parser/parserPostProcessors.js","parser/grammar.js","parser/formulaGrammar.js","parser/parsers.js","components/Spreadsheet.module.scss","components/Editor.module.scss","components/App.js","components/Spreadsheet.js","parser/indentedLexer.js","parser/functions.js","components/App.module.scss","components/Editor.js","mobx/variables.js","mobx/utils.js","mobx/SpreadsheetStore.js","parser/nodeTypes.js","serviceWorker.js","index.js","parser/errors.js"],"names":["tokens","ws","end","match","lineBreaks","identifier","type","moo","dot","lparen","rparen","lsquare","rsquare","plus","asterisk","slash","minus","semicolon","colon","compOperator","assign","number","value","x","parseFloat","lexer","IndentedLexer","addition","a","b","nodeTypes","op1","op2","subtraction","multiplication","division","return1","data","primary","negative","functionCall","args","variable","range","cell1","cell2","list","first","result","el","push","comparison","operator","comparision","emptyList","id","Lexer","ParserRules","has","p","kwIf","d","concat","expr","kwWhile","block","whileLoop","condition","elseBlock","ifElse","kwElse","left","right","assigment","indent","dedent","ParserStart","Parser","this","parser","nearley","fromCompiled","grammar","s","feed","e","UserError","message","results","FormulaParser","formulaGrammar","module","exports","store","SpreadsheetStore","functions","App","useEffect","populateSheet","className","style","y","cells","onCellSet","cell","isFormula","set","examples","onSubmit","code","exec","name","console","log","onLogLexerOutput","reset","tok","next","undefined","onLogParseTree","r","eval","letterLabelGenerator","nextChar","c","String","fromCharCode","charCodeAt","label","slice","reverse","join","index","length","observer","props","initial","useState","editing","_setEditing","useEditing","isEditing","setEditing","onInputKeyDown","keyCode","target","blur","rowLabelsGen","Spreadsheet","Array","fill","map","_","i","key","row","j","backgroundColor","background","onClick","onKeyDown","onFocus","formula","parentNode","classList","add","focus","onBlur","remove","autoFocus","error","nl","indents","afterNewLine","previous","startsWith","str","prefix","lastIndexOf","unicodeDebugString","u","n","hex16","offset","prototype","ignoreExcessiveEndsNext","ignoreWhiteSpaceNext","indentedNext","generateMoreTokens","shift","token","changeIndent","col","line","prev","text","Error","pop","save","info","replace","formatError","window","sum","flat","reduce","Editor","setCode","Top","example","mode","theme","onChange","height","width","Bottom","defaultProps","Variable","ast","observers","subjects","_unregisterObserver","v","indexOf","observable","Cell","manager","setCell","getCellIndexes","letters","substring","digits","divideIntoLettersAndNumber","y_index","parseInt","x_index","variables","startVariable","visited","sorted","dfs","includes","neighbour","topologicalSort","execFormula","execExpr","node","isArray","x1","execLeft","getOrCreateVar","obj","getVarByName","hasOwnProperty","func","constructor","call","apply","getCellsByRange","string","unregisterFromAllSubjects","charAt","setFormula","setValue","updateObservers","isNaN","findVarsReferenced","observe","getCellByName","start","y1","x2","y2","ranges","references","property","ifCondition","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","params","captureStackTrace"],"mappings":"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","file":"static/js/main.05521ce0.chunk.js","sourcesContent":["import * as moo from 'moo'\nimport IndentedLexer from './indentedLexer'\n\nconst tokens = {\n  ws: /[ \\t\\u00A0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u3000]+/,\n  end: {match: /\\n/, lineBreaks: true},\n  identifier: {\n    match: /[a-zA-Z]+[0-9]*/,\n    type: moo.keywords({\n      \"kwIf\": \"if\",\n      \"kwWhile\": \"while\",\n      \"kwFor\": \"for\",\n      \"kwElse\": \"else\",\n      \"kwDef\": \"def\"\n\n    })\n  },\n  dot: '.',\n  lparen: '(',\n  rparen: ')',\n  lsquare: '[',\n  rsquare: ']',\n  plus: '+',\n  asterisk: '*',\n  slash: '/',\n  minus: '-',\n  semicolon: ';',\n  colon: ':',\n  compOperator: /==|>=|<=|<|>|!=/,\n  assign: '=',\n  number: {\n    match: /[1-9][0-9]*(?:,[0-9]*)?|0(?:\\.[0-9]+)?/, // ?: dont create capturing group\n    value: x => parseFloat(x),\n  },\n\n};\n\nexport const lexer = new IndentedLexer(moo.compile(tokens), 'ws', 'end');\n\n","import {nodeTypes} from './nodeTypes.js';\n\nexport function addition([a, _, b]) {\n  return {\n    type: nodeTypes.addition,\n    op1: a,\n    op2: b,\n  };\n}\n\nexport function subtraction([a, _, b]) {\n  return {\n    type: nodeTypes.subtraction,\n    op1: a,\n    op2: b,\n  };\n}\n\nexport function multiplication([a, _, b]) {\n  return {\n    type: nodeTypes.multiplication,\n    op1: a,\n    op2: b,\n  };\n}\n\nexport function division([a, _, b]) {\n  return {\n    type: nodeTypes.division,\n    op1: a,\n    op2: b,\n  };\n}\n\nexport function return1(data) {\n  return data[1];\n}\n\nexport function number([number]) {\n  return {\n    type: nodeTypes.primary,\n    value: number.value,\n  }\n}\n\nexport function negative([_, number]) {\n  return {\n    type: nodeTypes.primary,\n    value: -number.value,\n  }\n}\n\nexport function functionCall([identifier, _, args]) {\n  return {\n    type: nodeTypes.functionCall,\n    identifier: identifier.value,\n    args: args,\n  };\n}\n\nexport function variable([identifier]) {\n  return {\n    type: nodeTypes.variable,\n    identifier: identifier.value,\n  };\n}\n\nexport function range([cell1, _, cell2]) {\n  return {\n    type: nodeTypes.range,\n    cell1: cell1,\n    cell2: cell2,\n  };\n}\n\nexport function list([first, list]) {\n  const result = [first];\n  for (const el of list) {\n    //el[0] is semicolon\n    //el[1] is cell_ref\n    result.push(el[1]);\n  }\n  return result;\n}\n\nexport function comparison([a, operator, b]) {\n  return {\n    type: nodeTypes.comparision,\n    op1: a,\n    op2: b,\n    operator: operator.value,\n  }\n}\n\nexport function expr([expr]) {\n  return {\n    expr: expr,\n    type: nodeTypes.expr,\n  }\n}\n\nexport function assigment([left, _, right]) {\n  return {\n    type: nodeTypes.assigment,\n    left: left,\n    right: right,\n  }\n}\n\nexport function block([,code]) {\n  return code;\n}\n\nexport function whileLoop([,expr,, block]) {\n  return {\n    type: nodeTypes.whileLoop,\n    condition: expr,\n    block: block,\n  }\n}\n\nexport function ifElse([,expr,, block, elseBlock]) {\n  return {\n    type: nodeTypes.ifElse,\n    condition: expr,\n    block: block,\n    elseBlock: elseBlock,\n  }\n}\n\nexport function elseBlock([,,block]) {\n  return block;\n}\n\nexport function emptyList() {\n  return []\n}\n","// Generated automatically by nearley, version 2.19.1\n// http://github.com/Hardmath123/nearley\nfunction id(x) { return x[0]; }\n\n  /* eslint-disable */\n  import * as p from './parserPostProcessors.js'\n  import {lexer} from './lexer.js'\nlet Lexer = lexer;\nlet ParserRules = [\n    {\"name\": \"formulaEntry\", \"symbols\": [\"expr\"]},\n    {\"name\": \"expr\", \"symbols\": [\"comparison\"], \"postprocess\": id},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\"], \"postprocess\": id},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"compOperator\") ? {type: \"compOperator\"} : compOperator), \"sum\"], \"postprocess\": p.comparison},\n    {\"name\": \"sum\", \"symbols\": [\"product\"], \"postprocess\": id},\n    {\"name\": \"sum\", \"symbols\": [\"sum\", (lexer.has(\"plus\") ? {type: \"plus\"} : plus), \"product\"], \"postprocess\": p.addition},\n    {\"name\": \"sum\", \"symbols\": [\"sum\", (lexer.has(\"minus\") ? {type: \"minus\"} : minus), \"product\"], \"postprocess\": p.subtraction},\n    {\"name\": \"product\", \"symbols\": [\"primary\"], \"postprocess\": id},\n    {\"name\": \"product\", \"symbols\": [\"product\", (lexer.has(\"asterisk\") ? {type: \"asterisk\"} : asterisk), \"primary\"], \"postprocess\": p.multiplication},\n    {\"name\": \"product\", \"symbols\": [\"product\", (lexer.has(\"slash\") ? {type: \"slash\"} : slash), \"primary\"], \"postprocess\": p.division},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"expr\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": p.return1},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"number\") ? {type: \"number\"} : number)], \"postprocess\": p.number},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"minus\") ? {type: \"minus\"} : minus), (lexer.has(\"number\") ? {type: \"number\"} : number)], \"postprocess\": p.negative},\n    {\"name\": \"primary\", \"symbols\": [\"variable\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [\"function_call\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [\"range\"], \"postprocess\": id},\n    {\"name\": \"variable\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier)], \"postprocess\": p.variable},\n    {\"name\": \"function_call\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier), (lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"args\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": p.functionCall},\n    {\"name\": \"function_call\", \"symbols\": [(lexer.has(\"kwIf\") ? {type: \"kwIf\"} : kwIf), (lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"args\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": p.functionCall},\n    {\"name\": \"args$ebnf$1\", \"symbols\": []},\n    {\"name\": \"args$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"semicolon\") ? {type: \"semicolon\"} : semicolon), \"expr\"]},\n    {\"name\": \"args$ebnf$1\", \"symbols\": [\"args$ebnf$1\", \"args$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"args\", \"symbols\": [\"expr\", \"args$ebnf$1\"], \"postprocess\": p.list},\n    {\"name\": \"args\", \"symbols\": [], \"postprocess\": p.emptyList},\n    {\"name\": \"range\", \"symbols\": [\"variable\", (lexer.has(\"colon\") ? {type: \"colon\"} : colon), \"variable\"], \"postprocess\": p.range},\n    {\"name\": \"entry\", \"symbols\": [\"code\"]},\n    {\"name\": \"code$ebnf$1\", \"symbols\": []},\n    {\"name\": \"code$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end), \"statement\"]},\n    {\"name\": \"code$ebnf$1\", \"symbols\": [\"code$ebnf$1\", \"code$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"code\", \"symbols\": [\"statement\", \"code$ebnf$1\"], \"postprocess\": p.list},\n    {\"name\": \"statement\", \"symbols\": [\"expr\"], \"postprocess\": p.expr},\n    {\"name\": \"statement\", \"symbols\": [\"assigment\"], \"postprocess\": id},\n    {\"name\": \"statement\", \"symbols\": [\"blockStart\"], \"postprocess\": id},\n    {\"name\": \"statement\", \"symbols\": [], \"postprocess\": null},\n    {\"name\": \"blockStart\", \"symbols\": [(lexer.has(\"kwWhile\") ? {type: \"kwWhile\"} : kwWhile), \"expr\", (lexer.has(\"end\") ? {type: \"end\"} : end), \"block\"], \"postprocess\": p.whileLoop},\n    {\"name\": \"blockStart$ebnf$1$subexpression$1\", \"symbols\": [\"else\"]},\n    {\"name\": \"blockStart$ebnf$1\", \"symbols\": [\"blockStart$ebnf$1$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"blockStart$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"blockStart\", \"symbols\": [(lexer.has(\"kwIf\") ? {type: \"kwIf\"} : kwIf), \"expr\", (lexer.has(\"end\") ? {type: \"end\"} : end), \"block\", \"blockStart$ebnf$1\"], \"postprocess\": p.ifElse},\n    {\"name\": \"else\", \"symbols\": [(lexer.has(\"kwElse\") ? {type: \"kwElse\"} : kwElse), (lexer.has(\"end\") ? {type: \"end\"} : end), \"block\"], \"postprocess\": p.elseBlock},\n    {\"name\": \"assigment\", \"symbols\": [\"expr\", (lexer.has(\"assign\") ? {type: \"assign\"} : assign), \"expr\"], \"postprocess\": p.assigment},\n    {\"name\": \"block$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end)]},\n    {\"name\": \"block$ebnf$1\", \"symbols\": [\"block$ebnf$1$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"block$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"block\", \"symbols\": [(lexer.has(\"indent\") ? {type: \"indent\"} : indent), \"code\", (lexer.has(\"dedent\") ? {type: \"dedent\"} : dedent), \"block$ebnf$1\"], \"postprocess\": p.block}\n];\nlet ParserStart = \"entry\";\nexport default { Lexer, ParserRules, ParserStart };\n","// Generated automatically by nearley, version 2.19.1\n// http://github.com/Hardmath123/nearley\nfunction id(x) { return x[0]; }\n\n  /* eslint-disable */\n  import * as p from './parserPostProcessors.js'\n  import {lexer} from './lexer.js'\nlet Lexer = lexer;\nlet ParserRules = [\n    {\"name\": \"formulaEntry\", \"symbols\": [\"expr\"]},\n    {\"name\": \"expr\", \"symbols\": [\"comparison\"], \"postprocess\": id},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\"], \"postprocess\": id},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"compOperator\") ? {type: \"compOperator\"} : compOperator), \"sum\"], \"postprocess\": p.comparison},\n    {\"name\": \"sum\", \"symbols\": [\"product\"], \"postprocess\": id},\n    {\"name\": \"sum\", \"symbols\": [\"sum\", (lexer.has(\"plus\") ? {type: \"plus\"} : plus), \"product\"], \"postprocess\": p.addition},\n    {\"name\": \"sum\", \"symbols\": [\"sum\", (lexer.has(\"minus\") ? {type: \"minus\"} : minus), \"product\"], \"postprocess\": p.subtraction},\n    {\"name\": \"product\", \"symbols\": [\"primary\"], \"postprocess\": id},\n    {\"name\": \"product\", \"symbols\": [\"product\", (lexer.has(\"asterisk\") ? {type: \"asterisk\"} : asterisk), \"primary\"], \"postprocess\": p.multiplication},\n    {\"name\": \"product\", \"symbols\": [\"product\", (lexer.has(\"slash\") ? {type: \"slash\"} : slash), \"primary\"], \"postprocess\": p.division},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"expr\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": p.return1},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"number\") ? {type: \"number\"} : number)], \"postprocess\": p.number},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"minus\") ? {type: \"minus\"} : minus), (lexer.has(\"number\") ? {type: \"number\"} : number)], \"postprocess\": p.negative},\n    {\"name\": \"primary\", \"symbols\": [\"variable\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [\"function_call\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [\"range\"], \"postprocess\": id},\n    {\"name\": \"variable\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier)], \"postprocess\": p.variable},\n    {\"name\": \"function_call\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier), (lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"args\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": p.functionCall},\n    {\"name\": \"function_call\", \"symbols\": [(lexer.has(\"kwIf\") ? {type: \"kwIf\"} : kwIf), (lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"args\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": p.functionCall},\n    {\"name\": \"args$ebnf$1\", \"symbols\": []},\n    {\"name\": \"args$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"semicolon\") ? {type: \"semicolon\"} : semicolon), \"expr\"]},\n    {\"name\": \"args$ebnf$1\", \"symbols\": [\"args$ebnf$1\", \"args$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"args\", \"symbols\": [\"expr\", \"args$ebnf$1\"], \"postprocess\": p.list},\n    {\"name\": \"args\", \"symbols\": [], \"postprocess\": p.emptyList},\n    {\"name\": \"range\", \"symbols\": [\"variable\", (lexer.has(\"colon\") ? {type: \"colon\"} : colon), \"variable\"], \"postprocess\": p.range}\n];\nlet ParserStart = \"formulaEntry\";\nexport default { Lexer, ParserRules, ParserStart };\n","import * as nearley from 'nearley';\nimport grammar from \"./grammar.js\";\nimport formulaGrammar from \"./formulaGrammar.js\";\n\nimport {UserError} from \"./errors\";\n\nexport class Parser {\n  constructor() {\n    this.parser = new nearley.Parser(nearley.Grammar.fromCompiled(grammar));\n  }\n\n  feed(s) {\n    try {\n      this.parser.feed(s);\n    } catch (e) {\n      throw new UserError(e.message);\n    }\n  }\n\n  get results() {\n    try {\n      return this.parser.results[0][0];\n    }catch (e) {\n      return null;\n    }\n  }\n}\n\n\nexport class FormulaParser {\n  constructor() {\n    this.parser = new nearley.Parser(nearley.Grammar.fromCompiled(formulaGrammar));\n  }\n\n  feed(s) {\n    try {\n      this.parser.feed(s);\n    } catch (e) {\n      throw new UserError(\"Syntax error\");\n    }\n  }\n\n  get results() {\n    try {\n      return this.parser.results[0][0];\n    }catch (e) {\n      return null;\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spreadsheet\":\"Spreadsheet_Spreadsheet__2MlAU\",\"focus\":\"Spreadsheet_focus__2PRei\",\"error\":\"Spreadsheet_error__2OBGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Editor\":\"Editor_Editor__3K0No\",\"Top\":\"Editor_Top__3e9Hb\",\"Bottom\":\"Editor_Bottom__MdgSJ\"};","/* eslint-disable no-eval */\nimport React, {useEffect} from 'react';\nimport Spreadsheet from \"./Spreadsheet\";\nimport {SpreadsheetStore} from \"../mobx/SpreadsheetStore\";\nimport {functions} from \"../parser/functions\";\nimport style from './App.module.scss';\nimport Editor from \"./Editor\";\nimport {lexer} from '../parser/lexer';\nimport {Parser} from \"../parser/parsers\";\n\nconst store = new SpreadsheetStore(5, 100, functions);\n\nfunction App() {\n\n  useEffect(populateSheet, []);\n\n  function run(code) {\n    if (code === \"\") {\n      return;\n    }\n    try {\n      const parser = new Parser();\n      parser.feed(code);\n      store.exec(parser.results);\n    } catch (e) {\n      if (e.name !== \"UserError\") {\n        throw e;\n      }\n      // todo fancy errors\n      console.log(e.message);\n    }\n  }\n\n  function logParseTree(code) {\n    try {\n      const parser = new Parser();\n      parser.feed(code);\n      console.log(parser.results);\n    } catch (e) {\n      if (e.name !== \"UserError\") {\n        throw e;\n      }\n      console.log(e.message);\n    }\n  }\n\n  function logLexerOutput(code) {\n    try {\n      lexer.reset(code);\n      const result = [];\n      let tok = lexer.next();\n      while (tok !== undefined) {\n        result.push(tok);\n        tok = lexer.next()\n      }\n      console.log(result);\n    } catch (e) {\n      if (e.name !== \"UserError\") {\n        throw e;\n      }\n\n      console.log(e.message);\n    }\n  }\n\n  return (\n    <div className={style.App}>\n      <Spreadsheet\n        x={store.x}\n        y={store.y}\n        cells={store.cells}\n        onCellSet={(cell, value, isFormula) => {\n          cell.set(value, isFormula)\n        }}\n      />\n      <Editor\n        examples={examples}\n        onSubmit={run}\n        onLogLexerOutput={logLexerOutput}\n        onLogParseTree={logParseTree}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\nconst examples = [\n  `i = 0\nwhile i < 5\n    cell[15][i] = i\n    i = i + 1`,\n\n`A1 = 5\ni = 5\nwhile i > 0\n    i = i - 1\n    A1 = A1 + 2`,\n\n`if A1 == 5\n    A2 = 5\nelse\n    A2 = 10  \n`,\n`A1.background = \"#52A\"`\n];\n\n\nfunction populateSheet() {\n\n  const cells = store.cells;\n\n  let r = 0;\n\n  cells[r][0].set(\"Self reference\");\n  cells[r][1].set(\"=B1\");\n\n  cells[++r][0].set(\"Cycle\");\n  cells[r][1].set(\"=C2\");\n  cells[r][2].set(\"=B2\");\n\n  cells[++r][0].set(\"Auto update working\");\n  cells[r][2].set(\"=B3\");\n  cells[r][3].set(\"=B3+C3\");\n  cells[r][1].set(\"coś\");\n\n  cells[++r][0].set(\"Simple math\");\n  let x = \"1+2*(5+5)+2/3+((1*3))/2\";\n  cells[r][1].set(\"=\" + x);\n  cells[r][2].set(`is ${eval(x)}`);\n\n  cells[++r][0].set(\"Complex math\");\n  x = \"1-1+2*(5+5)+2/3+((1*3))/2\";\n  cells[r][1].set(\"=\" + x);\n  cells[r][2].set(`is ${eval(x)}`);\n\n  cells[++r][0].set(\"Negative numbers\");\n  x = \"1-1+1\";\n  cells[r][1].set(\"=\" + x);\n  cells[r][2].set(`is ${eval(x)}`);\n\n  cells[++r][0].set(\"Math with labels\");\n  cells[r][1].set('=C7+D7*E7');\n  cells[r][2].set('2');\n  cells[r][3].set('2');\n  cells[r][4].set('2');\n\n  cells[++r][0].set(\"Invalid formulas\");\n  cells[r][1].set('=C7D7*E7');\n  cells[r][2].set('=as325');\n  cells[r][3].set('=1**2');\n\n  cells[++r][0].set(\"* and / order\");\n  x = \"3/3*3\";\n  cells[r][1].set(\"=\" + x);\n  cells[r][2].set(`is ${eval(x)}`);\n\n  cells[++r][0].set(\"- at the begging and --\");\n  x = \"-1+2\";\n  cells[r][1].set(\"=\" + x);\n  cells[r][2].set(`is ${eval(x)}`);\n\n  cells[++r][0].set(\"function call\");\n  cells[r][1].set(\"=sum(C11;D11;E11)\");\n  cells[r][2].set(\"1\");\n  cells[r][3].set(\"2\");\n  cells[r][4].set(\"3\");\n\n  cells[++r][0].set(\"function with range\");\n  cells[r][1].set(\"=sum(C11:E12)\");\n  cells[r][2].set(\"1\");\n  cells[r][3].set(\"2\");\n  cells[r][4].set(\"3\");\n\n  cells[++r][0].set(\"Not existing function\");\n  cells[r][1].set(\"=foo(C11:E12)\")\n\n  cells[++r][0].set(\"If\");\n  cells[r][1].set(\"=if(C14<D14;1;0)\");\n  cells[r][2].set(\"5\");\n  cells[r][3].set(\"6\");\n\n\n}\n","import React, {useState} from 'react';\nimport {observer} from \"mobx-react\";\nimport style from './Spreadsheet.module.scss'\nimport PropTypes from 'prop-types'\n\n/**\n * It returns strings like this: \"A\", \"B\", ... , \"Z\", \"AA\", \"AB\", ...\n */\nfunction* letterLabelGenerator() {\n  function nextChar(c) {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n  }\n\n  const label = ['A'];\n  while (true) {\n    yield label.slice().reverse().join(\"\");\n    let index = 0;\n    label[index] = nextChar(label[index]);\n    while (label[index].charCodeAt(0) > 'Z'.charCodeAt(0)) {\n      label[index] = 'A';\n      index++;\n      if (index >= label.length) {\n        label.push('A');\n        break;\n      }\n      label[index] = nextChar(label[index]);\n    }\n  }\n}\n\n\nconst Spreadsheet = props => {\n\n  let [isEditing, setEditing] = useEditing();\n\n\n  const onInputKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      e.target.blur();\n    }\n  };\n\n  const onBlur = (e, cell) => {\n    props.onCellSet(cell, e.target.value);\n    e.target.parentNode.classList.remove(style.focus);\n    if (isEditing(cell)){\n      setEditing(null);\n    }\n  };\n\n  const onFocus = (e, cell) => {\n    e.target.value = cell.formula ? cell.formula : cell.value;\n    e.target.parentNode.classList.add(style.focus)\n  };\n\n  const onClick = (e, cell) => {\n    setEditing(cell);\n  };\n\n  const rowLabelsGen = letterLabelGenerator();\n\n  return (\n    <div className={style.Spreadsheet}>\n      <table>\n        <thead>\n        <tr>\n          <th/>\n          {Array(props.x).fill(0).map((_, i) =>\n            <th key={i}>\n              {rowLabelsGen.next().value}\n            </th>\n          )}\n        </tr>\n        </thead>\n        <tbody>\n        {props.cells.map((row, i) =>\n          <tr key={i}>\n            <th>{i + 1}</th>\n            {row.map((cell, j) =>\n              <td\n                style={{backgroundColor: cell.background}}\n                onClick={e => onClick(e, cell)}\n                key={j}>\n                {isEditing(cell) ?\n                  <input\n                    onKeyDown={onInputKeyDown}\n                    onFocus={e => onFocus(e, cell)}\n                    onBlur={e => onBlur(e, cell)}\n                    autoFocus={true}\n                  /> :\n                  <div\n                    className={cell.error ? style.error : \"\"}\n                  >\n                    {cell.error ? cell.error : cell.value}\n                  </div>\n                }\n              </td>\n            )}\n          </tr>\n        )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n\nfunction useEditing(initial) {\n\n  let [editing, _setEditing] = useState(initial);\n\n  const setEditing = (cell) => {\n    if (cell == null) {\n      _setEditing(null)\n    }\n    else {\n      _setEditing({x: cell.x, y: cell.y})\n    }\n  };\n\n  const isEditing = (cell) => {\n    return editing && editing.x === cell.x && editing.y === cell.y;\n  };\n\n  return [isEditing, setEditing];\n}\n\n\nSpreadsheet.propTypes = {\n  cells: PropTypes.arrayOf(PropTypes.array).isRequired,\n  onCellSet: PropTypes.func.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n};\n\nexport default observer(Spreadsheet);\n","(function () {\n\n  function IndentedLexer(lexer, ws, nl) {\n    this.lexer = lexer;\n    this.indents = [];\n    this.tokens = [\"\"];\n    this.afterNewLine = true;\n    this.ws = ws; // white space token\n    this.nl = nl; // new line token\n\n    // used to ignore ends tokens\n    this.previous = null;\n  }\n\n  IndentedLexer.prototype.next = function () {\n    return this.ignoreExcessiveEndsNext();\n  }\n\n  IndentedLexer.prototype.ignoreExcessiveEndsNext = function () {\n    let tok = this.ignoreWhiteSpaceNext();\n    if (tok === undefined) {\n      return tok;\n    }\n\n    while (this.previous !== null && this.previous.type === this.end && tok.type === this.end) {\n\n    }\n\n    this.previous = tok;\n    return tok;\n\n  }\n\n  IndentedLexer.prototype.ignoreWhiteSpaceNext = function () {\n    let tok;\n    while ((tok = this.indentedNext()) && tok.type === this.ws) {\n    }\n    return tok;\n  }\n\n  IndentedLexer.prototype.indentedNext = function () {\n    while (this.tokens.length === 0) {\n      this.generateMoreTokens();\n    }\n    return this.tokens.shift()\n  }\n\n  IndentedLexer.prototype.generateMoreTokens = function () {\n    let token = this.lexer.next(this);\n    if (!token) {\n      this.changeIndent(\"\");\n      this.tokens.push(token);\n      return;\n    }\n\n    if (this.afterNewLine) {\n      this.afterNewLine = false;\n      if (token.type === this.ws) {\n        this.changeIndent(token.value, token.col, token.line, token.offset);\n      } else {\n        this.changeIndent(\"\", token.col, token.line, token.offset);\n        this.tokens.push(token);\n      }\n    } else {\n      this.tokens.push(token);\n    }\n    this.afterNewLine = (token.type === this.nl);\n  };\n\n  IndentedLexer.prototype.changeIndent = function (indent, col, line, offset) {\n    while (indent !== this.indents[this.indents.length - 1]) {\n      let prev = this.indents[this.indents.length - 1];\n      if (startsWith(indent, prev)) {  // more indentation than we had.\n        this.tokens.push({\n          type: 'indent',\n          text: indent,\n          value: indent,\n          lineBreaks: 0,\n          col: col,\n          line: line,\n          offset: offset,\n        });\n        this.indents.push(indent);\n        return;\n      } else if (startsWith(prev, indent)) { // less indentation than we had.\n        this.tokens.push({\n          type: 'dedent',\n          text: indent,\n          value: indent,\n          lineBreaks: 0,\n          col: col,\n          line: line,\n          offset: offset,\n        });\n        this.tokens.push({\n          type: 'end',\n          text: \"afterDedent\",\n          value: \"afterDedent\",\n          lineBreaks: 0,\n          col: col,\n          line: line,\n          offset: offset,\n        });\n        this.indents.pop();  // check the previous one.\n      } else {\n        prev = unicodeDebugString(prev);\n        indent = unicodeDebugString(indent);\n        throw Error('Indentations cannot be compared: ' + prev + ' and ' + indent + '.');\n      }\n    }\n  }\n\n  IndentedLexer.prototype.save = function () {\n    return this.lexer.save();\n  }\n\n  IndentedLexer.prototype.reset = function (data, info) {\n    // remove all new lines at both ends\n    this.lexer.reset(data.replace(/^\\n|\\n$/g, ''), info);\n    this.indents = [''];\n    this.tokens = [];\n    this.afterNewLine = true;\n  }\n\n  IndentedLexer.prototype.formatError = function (token) {\n    return this.lexer.formatError(token,\"Invalid syntax\");\n  }\n\n  IndentedLexer.prototype.has = function (name) {\n    return this.lexer.has(name);\n  }\n\n  // ---------------------------------------------------------\n\n  function startsWith(str, prefix) {\n    return str.lastIndexOf(prefix, 0) === 0;\n  }\n\n  function unicodeDebugString(s) {\n    let u = '';\n    for (let i = 0; i < s.length; ++i) {\n      let n = s.charCodeAt(i), hex16 = '';\n      for (let j = 0; j < 4; ++j) {\n        let d = n % 16;\n        n /= 16;\n        let offset = (d < 10) ? 0x30 : 0x61 - 10\n        let ch = String.fromCharCode(d + offset);\n        hex16 = ch + hex16;\n      }\n      u += ('\\\\u' + hex16);\n    }\n    return '\"' + u + '\"';\n  }\n\n  // ---------------------------------------------------------\n\n  if (typeof module === 'object' && module.exports) {\n    module.exports = IndentedLexer;\n  } else {\n    window.IndentedLexer = IndentedLexer;\n  }\n})();\n","function sum(...list) {\n  return list.flat().reduce((a, b) => a + b, 0);\n}\n\nfunction avg(...list) {\n  list = list.flat();\n  return sum(list) / list.length;\n}\n\nexport const functions = {\n  \"sum\": sum,\n  \"avg\": avg,\n  \"if\": (a, b, c) => a ? b : c,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__rq8wc\"};","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Editor.module.scss';\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/theme-cobalt\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/webpack-resolver\";\n\nconst Editor = props => {\n\n  let [code, setCode] = useState(\"\");\n\n\n  return (\n    <div\n      className={style.Editor}\n    >\n      <div className={style.Top}>\n        {props.examples.map((example, i) =>\n          <button\n            key={i}\n            onClick={() => setCode(example)}\n          > Example {i} </button>\n        )}\n      </div>\n      <AceEditor\n        mode=\"python\"\n        theme=\"cobalt\"\n        onChange={setCode}\n        value={code}\n        height={'100%'}\n        width={'100%'}\n        // annotations={[{ row: 0, column: 10, type: 'error', text: 'Some error.'}]}\n      />\n      <div className={style.Bottom}>\n        <button onClick={() => props.onLogParseTree(code)}> Log parse tree </button>\n        <button onClick={() => props.onLogLexerOutput(code)}> Log tokens </button>\n        <button onClick={() => props.onSubmit(code)}> Run </button>\n      </div>\n    </div>\n  );\n};\n\nEditor.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onLogLexerOutput: PropTypes.func.isRequired,\n  onLogParseTree: PropTypes.func.isRequired,\n  examples: PropTypes.array,\n};\n\n\nEditor.defaultProps = {\n  examples: [\"123\", \"hello world\"],\n};\n\n\nexport default Editor;\n","import {observable} from \"mobx\";\n\n\nexport class Variable {\n\n  @observable formula = null;\n  @observable value = null;\n\n  ast = null;\n\n  // vars that observe us -> we are used in their formula\n  observers = [];\n  // vars that we observe for changes -> we use them in our formula\n  subjects = [];\n\n  unregisterFromAllSubjects() {\n    for (const cell of this.subjects) {\n      cell._unregisterObserver(this);\n    }\n    this.subjects = [];\n  }\n\n  observe(cell) {\n    cell.observers.push(this);\n    this.subjects.push(cell);\n  }\n\n  _unregisterObserver(v) {\n    const index = this.observers.indexOf(v);\n    if (index === this.observers.length - 1) {\n      this.observers.pop();\n    } else {\n      this.observers[index] = this.observers.pop();\n    }\n  }\n}\n\nexport class Cell extends Variable {\n\n  @observable background = null;\n  @observable error = null;\n\n  constructor(x, y, manager) {\n    super();\n    this.x = x;\n    this.y = y;\n    this.manager = manager;\n  }\n\n\n  set(str) {\n    this.manager.setCell(this, str)\n  }\n}\n","import {UserError} from \"../parser/errors\";\n\nexport function topologicalSort(startVariable) {\n  let visited = [];\n  let sorted = [];\n  dfs(startVariable);\n\n  function dfs(variable) {\n    if (sorted.includes(variable)) {\n      return;\n    }\n    if (visited.includes(variable)) {\n      throw new UserError(\"Cycle\");\n    }\n    visited.push(variable);\n    for (const neighbour of variable.observers) {\n      dfs(neighbour)\n    }\n    sorted.push(variable);\n  }\n\n  return sorted.reverse().slice(1);\n}\n\nexport function isFormula(x) {\n  return x.charAt(0) === '=';\n}\n\nexport function isLetter(str) {\n  return str.length === 1 && str.match(/[a-z]/i);\n}\n\nexport function divideIntoLettersAndNumber(identifier) {\n  let index = 0;\n  while (index < identifier.length && isLetter(identifier[index])) {\n    index++;\n  }\n  const letters = identifier.substring(0, index);\n  const digits = identifier.substring(index);\n\n  if (letters.length === 0 || digits.length === 0) {\n    throw new UserError(`Incorrect identifier: ${identifier}`)\n  }\n\n  return [letters, digits];\n}\n\nexport function getCellIndexes(name) {\n\n  const [letters, digits] = divideIntoLettersAndNumber(name);\n\n  const y_index = parseInt(digits) - 1;\n\n  let x_index = 0;\n  for (let i = 0; i < letters.length; i++) {\n    x_index *= (\"Z\".charCodeAt(0) - 'A'.charCodeAt(0) + 1);\n    x_index += letters[i].charCodeAt(0) - \"A\".charCodeAt(0);\n  }\n  return [x_index, y_index];\n}\n\nexport function isFunction(obj) {\n  return !!(obj && obj.constructor && obj.call && obj.apply);\n}\n","import {FormulaParser} from \"../parser/parsers\";\nimport {nodeTypes} from \"../parser/nodeTypes\";\nimport {UserError} from \"../parser/errors\";\nimport {Cell, Variable} from \"./variables\";\nimport {getCellIndexes, isFormula, isFunction, topologicalSort} from \"./utils\";\n\n\nexport class SpreadsheetStore {\n  cells = [];\n  variables = {};\n\n  constructor(x, y, functions) {\n    this.x = x;\n    this.y = y;\n    this.variables = functions;\n    this.cells = Array(y);\n    for (let i = 0; i < y; i++) {\n      this.cells[i] = Array(x);\n      for (let j = 0; j < x; j++) {\n        this.cells[i][j] = new Cell(i, j, this);\n      }\n    }\n  }\n\n  updateObservers(variable) {\n    for (const x of topologicalSort(variable)) {\n      this.execFormula(x);\n    }\n  }\n\n  execFormula(variable) {\n    variable.value = this.execExpr(variable.ast);\n  }\n\n\n  exec(node) {\n    // its either a list or a object with property type set\n    if (Array.isArray(node)) {\n      for (const x1 of node) {\n        this.exec(x1);\n      }\n      return;\n    }\n    switch (node.type) {\n      case nodeTypes.assigment:\n        const left = this.execLeft(node.left);\n        const right = this.execExpr(node.right);\n        // todo check for errors\n        left.value = right;\n        return right;\n      case nodeTypes.expr:\n        return this.execExpr(node.expr);\n      case nodeTypes.whileLoop:\n        while (this.execExpr(node.condition)) {\n          this.exec(node.block);\n        }\n        break;\n      case nodeTypes.ifElse:\n        if (this.execExpr(node.condition)) {\n          this.exec(node.block);\n        } else {\n          if (node.elseBlock !== null) {\n            this.exec(node.elseBlock);\n          }\n        }\n        break;\n      default:\n        throw Error(`Not handled node type ${node.type}`);\n    }\n  }\n\n  execLeft(node) {\n    switch (node.type) {\n      case nodeTypes.variable:\n        return this.getOrCreateVar(node.identifier);\n      default:\n        throw new UserError(\"Assign to rvalue.\")\n    }\n  }\n\n  execExpr(node) {\n\n    switch (node.type) {\n      case nodeTypes.primary:\n        return node.value;\n      case nodeTypes.variable:\n        return this.getVarByName(node.identifier).value;\n\n      case nodeTypes.multiplication:\n        return this.execExpr(node.op1) * this.execExpr(node.op2);\n\n      case nodeTypes.division:\n        return this.execExpr(node.op1) / this.execExpr(node.op2);\n\n      case nodeTypes.addition:\n        return this.execExpr(node.op1) + this.execExpr(node.op2);\n\n      case nodeTypes.subtraction:\n        return this.execExpr(node.op1) - this.execExpr(node.op2);\n\n      case nodeTypes.functionCall:\n        if (!this.variables.hasOwnProperty(node.identifier)) {\n          throw new UserError(`No function: ${node.identifier}`);\n        }\n        const func = this.variables[node.identifier];\n        if (!isFunction(func)) {\n          throw new UserError(`${node.identifier} is not a function.`)\n        }\n        const args = node.args.map(a => this.execExpr(a));\n        return func(...args);\n\n      case nodeTypes.comparision:\n        const a = this.execExpr(node.op1);\n        const b = this.execExpr(node.op2);\n        switch (node.operator) {\n          case '==':\n            return a === b;\n          case '>=':\n            return a >= b;\n          case '<=':\n            return a <= b;\n          case '<':\n            return a < b;\n          case '>':\n            return a > b;\n          case '!=':\n            return a !== b;\n          default:\n            throw Error(\"Unknown comparison operator\");\n        }\n\n      case nodeTypes.range:\n        return this.getCellsByRange(node.cell1.identifier, node.cell2.identifier).map((x) => x.value);\n\n      default:\n        throw Error(`Not handled node type ${node.type}`);\n\n    }\n  }\n\n  setCell(cell, string) {\n    cell.unregisterFromAllSubjects();\n    try {\n      if (isFormula(string)) {\n        this.setFormula(cell, string);\n      } else {\n        this.setValue(cell, string);\n      }\n      this.updateObservers(cell);\n      cell.error = null;\n    } catch (e) {\n      if (e.name !== \"UserError\") {\n        throw e;\n      }\n      cell.error = e.message;\n    }\n  }\n\n  setValue(variable, value) {\n    const x = parseFloat(value);\n    if (!isNaN(x)) {\n      variable.value = x;\n    } else {\n      variable.value = value;\n    }\n    variable.formula = null;\n    variable.ast = null;\n  }\n\n  setFormula(variable, formula) {\n    variable.formula = formula;\n    const parser = new FormulaParser();\n    parser.feed(variable.formula.substring(1));\n\n    variable.ast = parser.results;\n    this.execFormula(variable);\n\n    for (const v of this.findVarsReferenced(variable.ast)) {\n      variable.observe(v);\n    }\n  }\n\n  setVariable(identifier, value) {\n    let variable = this.getOrCreateVar(identifier);\n    this.setValue(variable, value);\n  }\n\n  getOrCreateVar(identifier) {\n    try {\n      return this.getVarByName(identifier);\n    } catch (e) {\n      return this.variables[identifier] = new Variable();\n    }\n  }\n\n  getVarByName(identifier) {\n    let variable = this.getCellByName(identifier);\n    if (variable == null) {\n      if (this.variables.hasOwnProperty(identifier)) {\n        return this.variables[identifier];\n      } else {\n        throw new UserError(`No variable: ${identifier}`);\n      }\n    }\n    return variable;\n  }\n\n\n  /**\n   * @param identifier For example: A2, AB13, C13 etc as string\n   */\n  getCellByName(identifier) {\n    let x_index, y_index;\n    try {\n      [x_index, y_index] = getCellIndexes(identifier);\n    }catch (e) {\n      return null;\n    }\n\n    if (this.x <= x_index || this.y <= y_index) {\n      return null;\n    }\n    return this.cells[y_index][x_index];\n  }\n\n  getCellsByRange(start, end) {\n    const [x1, y1] = getCellIndexes(start);\n    const [x2, y2] = getCellIndexes(end);\n\n    if (this.x <= x1 || this.y <= y1) {\n      throw new UserError(`No cell: ${start}`)\n    }\n    if (this.x <= x2 || this.y <= y2) {\n      throw new UserError(`No cell: ${end}`)\n    }\n\n    const result = [];\n\n    for (let i = y1; i <= y2; i++) {\n      for (let j = x1; j <= x2; j++) {\n        result.push(this.cells[i][j]);\n      }\n    }\n\n    return result;\n  }\n\n  findVarsReferenced(ast) {\n    function dfs(node) {\n      if (node.type !== undefined) {\n        if (node.type === 'variable') {\n          references.push(node.identifier);\n          return;\n        }\n        if (node.type === 'range') {\n          ranges.push([node.cell1.identifier, node.cell2.identifier]);\n          return;\n        }\n        for (const property in node) {\n          if (node.hasOwnProperty(property)) {\n            if (Array.isArray(node[property])) {\n              for (const el of node[property]) {\n                dfs(el);\n              }\n            } else {\n              dfs(node[property]);\n            }\n          }\n        }\n      }\n    }\n\n    const ranges = [];\n    const references = [];\n    dfs(ast);\n\n    const result = [];\n    result.push(...references.map((x) => this.getVarByName(x)));\n    for (let [start, end] of ranges) {\n      result.push(...this.getCellsByRange(start, end));\n    }\n    return result;\n  }\n}\n","export const nodeTypes = {\n  multiplication: \"multiplication\",\n  division: \"division\",\n  addition: \"addition\",\n  subtraction: \"subtraction\",\n  functionCall: \"functionCall\",\n  variable: \"variable\",\n  range: \"range\",\n  list: \"list\",\n  ifCondition: \"ifCondition\",\n  comparision: \"comparision\",\n  expr: \"expr\",\n  assigment: \"assigment\",\n  primary: \"primary\",\n  whileLoop: \"whileLoop\",\n  ifElse: \"ifElse\",\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export class UserError extends Error {\n  constructor(...params) {\n    super(...params);\n    this.name = \"UserError\";\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, UserError);\n    }\n  }\n}\n"],"sourceRoot":""}