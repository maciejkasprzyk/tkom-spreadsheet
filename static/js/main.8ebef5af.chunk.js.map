{"version":3,"sources":["components/Spreadsheet.module.scss","components/Editor.module.scss","parser/indentedLexer.js","components/App.module.scss","utils.js","components/Spreadsheet.js","nodes/BaseNode.js","nodes/BinaryOperationNode.js","nodes/AdditionNode.js","nodes/SubtractionNode.js","nodes/MultiplicationNode.js","nodes/DivisionNode.js","nodes/NumberNode.js","nodes/NegativeNode.js","nodes/UnaryOperator.js","nodes/RangeNode.js","nodes/FunctionCallNode.js","nodes/VariableNode.js","nodes/CellNode.js","nodes/DynamicCellNode.js","nodes/AssignmentNode.js","nodes/WhileNode.js","nodes/IfElseNode.js","nodes/EqualNode.js","nodes/GreaterEqualNode.js","nodes/LessEqualNode.js","nodes/LessNode.js","nodes/GreaterNode.js","nodes/NotEqualNode.js","nodes/FunctionDefNode.js","nodes/ReferenceNode.js","nodes/ReturnNode.js","nodes/ForNode.js","parser/parserPostProcessors.js","parser/lexer.js","parser/grammar.js","parser/formulaGrammar.js","parser/parsers.js","environment/Variable.js","environment/Cell.js","environment/Environment.js","mobx/SpreadsheetStore.js","components/Editor.js","components/App.js","serviceWorker.js","index.js","parser/errors.js"],"names":["module","exports","IndentedLexer","lexer","ws","end","this","startsWith","str","prefix","lastIndexOf","unicodeDebugString","s","u","i","length","n","charCodeAt","hex16","j","d","offset","String","fromCharCode","prototype","next","ignoreWhiteSpaceNext","e","require","UserError","message","tok","indentedNext","type","tokens","generateMoreTokens","shift","token","changeIndent","push","afterNewLine","value","col","line","indent","indents","prev","text","lineBreaks","Error","pop","save","reset","data","info","formatError","has","name","window","letterLabelGenerator","nextChar","c","label","slice","reverse","join","index","getCellIndexes","cellIdentifier","match","exec","divideIntoLettersAndNumber","letters","digits","y_index","parseInt","x_index","x","y","errorInfoExecDecorator","target","descriptor","original","args","apply","regex","m","observer","props","initial","useState","editing","_setEditing","cell","useEditing","isEditing","setEditing","onInputKeyDown","keyCode","blur","rowLabelsGen","className","style","Spreadsheet","id","getContent","tip","split","cells","error","Array","fill","map","_","key","row","backgroundColor","background","onClick","data-tip","data-for","onKeyDown","onFocus","formula","parentNode","classList","add","focus","onBlur","onCellSet","remove","autoFocus","BaseNode","env","property","concat","findCellsReferenced","BinaryOperationNode","left","right","unParse","AdditionNode","SubtractionNode","MultiplicationNode","DivisionNode","NumberNode","NegativeNode","operand","RangeNode","startCell","endCell","cell1","cell2","getCellsByRange","getCell","FunctionCallNode","identifier","func","getFunction","argsValues","a","newScope","setReference","setVariable","block","b","popScope","result","VariableNode","getReference","undefined","getVarByName","CellNode","DynamicCellNode","AssignmentNode","ast","cloneDeep","wrapper","replaceVariablesWithConstants","varValue","toString","setCell","WhileNode","condition","ifElseNode","elseBlock","EqualNode","environ","GreaterEqualNode","LessEqualNode","LessNode","GreaterNode","NotEqualNode","FunctionDefNode","setFunction","ReferenceNode","referenced","ReturnNode","expr","returnHandler","ForNode","variableName","range","getCells","addition","subtraction","multiplication","division","number","negative","functionCall","equal","greaterEqual","lessEqual","less","greater","notEqual","variable","assigment","emptyList","dynamicCell","reference","identifierToken","argsList","first","list","el","moo","ampersand","dot","comma","lparen","rparen","lsquare","rsquare","plus","asterisk","slash","minus","semicolon","colon","assign","string","parseFloat","Lexer","ParserRules","p","kwIf","kwWhile","kwDef","kwFor","kwIn","kwElse","dedent","kwReturn","ParserStart","Parser","parser","nearley","fromCompiled","grammar","feed","results","FormulaParser","formulaGrammar","Variable","Cell","observers","subjects","_unregisterObserver","v","indexOf","observable","Environment","funcitons","gen","variablesScopes","referencesScopes","unregisterFromAllSubjects","charAt","isFormula","_setCellFormula","_setCellValue","_updateObservers","substring","varsReferenced","observe","isNaN","start","x1","y1","x2","y2","startVariable","visited","sorted","dfs","includes","neighbour","topologicalSort","variables","hasOwnProperty","node","console","log","SpreadsheetStore","code","annotations","lines","Math","min","column","setCodeState","setCode","Editor","Top","customFileUpload","onChange","file","files","fr","FileReader","addEventListener","o","JSON","parse","onSubmit","onLoad","readAsText","onSave","mode","theme","height","width","store","Bottom","onLogParseTree","onLogLexerOutput","App","indexes","cellsToObjects","blob","Blob","stringify","saveAs","run","logLexerOutput","logParseTree","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","returnMessage","params","captureStackTrace"],"mappings":"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","file":"static/js/main.8ebef5af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spreadsheet\":\"Spreadsheet_Spreadsheet__2MlAU\",\"focus\":\"Spreadsheet_focus__2PRei\",\"cell\":\"Spreadsheet_cell__1_ob1\",\"error\":\"Spreadsheet_error__2OBGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Editor\":\"Editor_Editor__3K0No\",\"Top\":\"Editor_Top__3e9Hb\",\"customFileUpload\":\"Editor_customFileUpload__SpF0p\",\"Bottom\":\"Editor_Bottom__MdgSJ\"};","(function () {\n\n  function IndentedLexer(lexer, ws, end) {\n    this.lexer = lexer;\n    this.ws = ws; // white space token\n    this.end = end; // new line token\n  }\n\n  IndentedLexer.prototype.next = function () {\n    try {\n      return this.ignoreWhiteSpaceNext();\n    } catch (e) {\n      const errors = require('./errors')\n      throw new errors.UserError(e.message);\n    }\n  }\n\n  IndentedLexer.prototype.ignoreWhiteSpaceNext = function () {\n    let tok;\n    while ((tok = this.indentedNext()) && tok.type === this.ws) {\n    }\n    return tok;\n  }\n\n  IndentedLexer.prototype.indentedNext = function () {\n    while (this.tokens.length === 0) {\n      this.generateMoreTokens();\n    }\n    return this.tokens.shift()\n  }\n\n  IndentedLexer.prototype.generateMoreTokens = function () {\n    let token = this.lexer.next(this);\n    if (!token) {\n      this.changeIndent(\"\");\n      this.tokens.push(token);\n      return;\n    }\n\n    if (this.afterNewLine) {\n      this.afterNewLine = false;\n      if (token.type === this.ws) {\n        this.changeIndent(token.value, token.col, token.line, token.offset);\n      } else {\n        this.changeIndent(\"\", token.col, token.line, token.offset);\n        this.tokens.push(token);\n      }\n    } else {\n      this.tokens.push(token);\n    }\n    this.afterNewLine = (token.type === this.end);\n  };\n\n  IndentedLexer.prototype.changeIndent = function (indent, col, line, offset) {\n    while (indent !== this.indents[this.indents.length - 1]) {\n      let prev = this.indents[this.indents.length - 1];\n      if (startsWith(indent, prev)) {  // more indentation than we had.\n        this.tokens.push({\n          type: 'indent',\n          text: indent,\n          value: indent,\n          lineBreaks: 0,\n          col: col,\n          line: line,\n          offset: offset,\n        });\n        this.indents.push(indent);\n        return;\n      } else if (startsWith(prev, indent)) { // less indentation than we had.\n        this.tokens.push({\n          type: 'dedent',\n          text: indent,\n          value: indent,\n          lineBreaks: 0,\n          col: col,\n          line: line,\n          offset: offset,\n        });\n        this.indents.pop();  // check the previous one.\n      } else {\n        prev = unicodeDebugString(prev);\n        indent = unicodeDebugString(indent);\n        throw Error('Indentations cannot be compared: ' + prev + ' and ' + indent + '.');\n      }\n    }\n  }\n\n  IndentedLexer.prototype.save = function () {\n    return this.lexer.save();\n  }\n\n  IndentedLexer.prototype.reset = function (data, info) {\n    this.lexer.reset(data, info);\n    this.indents = [''];\n    this.tokens = [];\n    this.afterNewLine = true;\n  }\n\n  IndentedLexer.prototype.formatError = function (token) {\n    return this.lexer.formatError(token, \"Invalid syntax\");\n  }\n\n  IndentedLexer.prototype.has = function (name) {\n    return this.lexer.has(name);\n  }\n\n  // ---------------------------------------------------------\n\n  function startsWith(str, prefix) {\n    return str.lastIndexOf(prefix, 0) === 0;\n  }\n\n  function unicodeDebugString(s) {\n    let u = '';\n    for (let i = 0; i < s.length; ++i) {\n      let n = s.charCodeAt(i), hex16 = '';\n      for (let j = 0; j < 4; ++j) {\n        let d = n % 16;\n        n /= 16;\n        let offset = (d < 10) ? 0x30 : 0x61 - 10\n        let ch = String.fromCharCode(d + offset);\n        hex16 = ch + hex16;\n      }\n      u += ('\\\\u' + hex16);\n    }\n    return '\"' + u + '\"';\n  }\n\n  // ---------------------------------------------------------\n\n  if (typeof module === 'object' && module.exports) {\n    module.exports = IndentedLexer;\n  } else {\n    window.IndentedLexer = IndentedLexer;\n  }\n})();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__rq8wc\"};","import {UserError} from \"./parser/errors\";\n\n/**\n * It returns strings like this: \"A\", \"B\", ... , \"Z\", \"AA\", \"AB\", ...\n */\nexport function* letterLabelGenerator() {\n  function nextChar(c) {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n  }\n\n  const label = ['A'];\n  while (true) {\n    yield label.slice().reverse().join(\"\");\n    let index = 0;\n    label[index] = nextChar(label[index]);\n    while (label[index].charCodeAt(0) > 'Z'.charCodeAt(0)) {\n      label[index] = 'A';\n      index++;\n      if (index >= label.length) {\n        label.push('A');\n        break;\n      }\n      label[index] = nextChar(label[index]);\n    }\n  }\n}\n\n\nexport function topologicalSort(startVariable) {\n  let visited = [];\n  let sorted = [];\n  dfs(startVariable);\n\n  function dfs(variable) {\n    if (sorted.includes(variable)) {\n      return;\n    }\n    if (visited.includes(variable)) {\n      throw new UserError(\"Cycle\");\n    }\n    visited.push(variable);\n    for (const neighbour of variable.observers) {\n      dfs(neighbour)\n    }\n    sorted.push(variable);\n  }\n\n  return sorted.reverse().slice(1);\n}\n\nexport function isFormula(x) {\n  return x.charAt(0) === '=';\n}\n\nfunction divideIntoLettersAndNumber(cellIdentifier) {\n  const regex = /([a-zA-Z]+)([0-9]+)/;\n  const match = regex.exec(cellIdentifier);\n\n  return [match[1], match[2]];\n}\n\nexport function getCellIndexes(cellIdentifier) {\n  const [letters, digits] = divideIntoLettersAndNumber(cellIdentifier);\n\n  const y_index = parseInt(digits) - 1;\n\n  let x_index = -1;\n  for (let i = 0; i < letters.length; i++) {\n    x_index += 1\n    x_index *= (\"Z\".charCodeAt(0) - 'A'.charCodeAt(0) + 1);\n    x_index += letters[i].charCodeAt(0) - \"A\".charCodeAt(0);\n  }\n  return {x: x_index, y: y_index}\n}\n\nexport function errorInfoExecDecorator(target, name, descriptor) {\n  const original = descriptor.value;\n  if (typeof original === 'function') {\n    descriptor.value = function (...args) {\n      try {\n        return original.apply(this, args)\n      } catch (e) {\n        if (e.name === \"UserError\") {\n          const regex = /.*line (\\d*).*col (\\d*)/gm;\n          const m = regex.exec(e.message)\n          if (m === null) {\n            e.message = 'Execution error at line ' + this.line + ' col ' + this.col + ':\\n' + e.message;\n          }\n          throw e;\n        } else {\n          throw e;\n        }\n      }\n    }\n  }\n  return descriptor\n}\n","import React, {useState} from 'react';\nimport {observer} from \"mobx-react\";\nimport style from './Spreadsheet.module.scss'\nimport PropTypes from 'prop-types'\nimport {letterLabelGenerator} from \"../utils\";\nimport ReactTooltip from \"react-tooltip\";\n\n\nconst Spreadsheet = props => {\n\n  let [isEditing, setEditing] = useEditing();\n\n\n  const onInputKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      e.target.blur();\n    }\n  };\n\n  const onBlur = (e, cell) => {\n    props.onCellSet(cell.x, cell.y, e.target.value);\n    e.target.parentNode.classList.remove(style.focus);\n    if (isEditing(cell)) {\n      setEditing(null);\n    }\n  };\n\n  const onFocus = (e, cell) => {\n    e.target.value = cell.formula ? cell.formula : cell.value;\n    e.target.parentNode.classList.add(style.focus)\n  };\n\n  const onClick = (e, cell) => {\n    setEditing(cell);\n  };\n\n  const getContent = (tip) => {\n    if (tip === null) {\n      return null;\n    }\n    let [i,j] = tip.split(\" \");\n    i = parseInt(i)\n    j = parseInt(j)\n    const cell = props.cells[i][j];\n    if (cell.error !== null) {\n      return cell.error\n    }\n    if (cell.value !== null) {\n      return cell.value;\n    }\n    return null\n  }\n\n  const rowLabelsGen = letterLabelGenerator();\n\n  return (\n    <div className={style.Spreadsheet}>\n      <ReactTooltip\n        id='tooltip'\n        getContent={(tip) => getContent(tip)}\n      />\n      <table>\n        <thead>\n        <tr>\n          <th/>\n          {Array(props.x).fill(0).map((_, i) =>\n            <th key={i}>\n              {rowLabelsGen.next().value}\n            </th>\n          )}\n        </tr>\n        </thead>\n        <tbody>\n        {props.cells.map((row, i) =>\n          <tr key={i}>\n            <th>{i + 1}</th>\n            {row.map((cell, j) =>\n              <td\n                style={{backgroundColor: cell.background}}\n                onClick={e => onClick(e, cell)}\n                key={j}\n                data-tip={i + ' ' + j}\n                data-for='tooltip'\n              >\n\n                {isEditing(cell) ?\n                  <input\n                    onKeyDown={onInputKeyDown}\n                    onFocus={e => onFocus(e, cell)}\n                    onBlur={e => onBlur(e, cell)}\n                    autoFocus={true}\n                  /> :\n                  <div\n                    className={`${style.cell} ${cell.error ? style.error : \"\"}`}\n                  >\n                    {cell.error ? cell.error : cell.value}\n                  </div>\n                }\n              </td>\n            )}\n          </tr>\n        )}\n        </tbody>\n      </table>\n\n    </div>\n  );\n};\n\n\nfunction useEditing(initial) {\n\n  let [editing, _setEditing] = useState(initial);\n\n  const setEditing = (cell) => {\n    if (cell == null) {\n      _setEditing(null)\n    } else {\n      _setEditing({x: cell.x, y: cell.y})\n    }\n  };\n\n  const isEditing = (cell) => {\n    return editing && editing.x === cell.x && editing.y === cell.y;\n  };\n\n  return [isEditing, setEditing];\n}\n\n\nSpreadsheet.propTypes = {\n  cells: PropTypes.arrayOf(PropTypes.array).isRequired,\n  onCellSet: PropTypes.func.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n};\n\nexport default observer(Spreadsheet);\n","import {UserError} from \"../parser/errors\";\n\nexport class BaseNode {\n  constructor({value,type,text,offset,line,col}) {\n    this.value = value;\n    this.type = type;\n    this.text = text;\n    this.offset  = offset\n    this.line = line;\n    this.col = col;\n  }\n\n  findCellsReferenced(env) {\n    let cells = []\n    for (let property in this) {\n      if (this[property] instanceof BaseNode) {\n        cells = cells.concat(this[property].findCellsReferenced(env));\n      }\n    }\n    return cells;\n  }\n\n\n  unParse(env) {\n    return this.text;\n  }\n\n  exec(env) {\n    throw new UserError(\"Executing non executable\")\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\n\nexport class BinaryOperationNode extends BaseNode {\n  constructor(left,right, token) {\n    super(token);\n    this.left = left;\n    this.right = right;\n  }\n\n\n  unParse(env) {\n    return '( ' + this.left.unParse(env) + \" \" +  this.text + \" \" + this.right.unParse(env) + ' )';\n  }\n\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\n\nexport class AdditionNode extends BinaryOperationNode {\n\n  exec(env) {\n    return this.left.exec(env) + this.right.exec(env);\n  }\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\n\nexport class SubtractionNode extends BinaryOperationNode {\n\n  exec(env) {\n    return this.left.exec(env) - this.right.exec(env);\n  }\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\n\nexport class MultiplicationNode extends BinaryOperationNode {\n  exec(env) {\n    return this.left.exec(env) * this.right.exec(env);\n  }\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\n\nexport class DivisionNode extends BinaryOperationNode {\n  exec(env) {\n    return this.left.exec(env) / this.right.exec(env);\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\n\nexport class NumberNode extends BaseNode {\n  exec() {\n    return this.value;\n  }\n}\n","import {UnaryOperator} from \"./UnaryOperator\";\n\nexport class NegativeNode extends UnaryOperator {\n  exec(env) {\n    return -this.operand.exec(env);\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\n\nexport class UnaryOperator extends BaseNode {\n  constructor(operand, token) {\n    super(token);\n    this.operand = operand;\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\n\nexport class RangeNode extends BaseNode {\n  constructor(startCell, endCell, token) {\n    super(token);\n    this.cell1 = startCell;\n    this.cell2 = endCell;\n  }\n\n  getCells(env) {\n    return env.getCellsByRange(this.cell1,this.cell2);\n  }\n\n  exec(env) {\n    return this;\n  }\n\n  findCellsReferenced(env) {\n    return env.getCellsByRange(this.cell1, this.cell2);\n  }\n\n  unParse(env) {\n    return env.getCell(this.cell1.x, this.cell1.y).label + ':' + env.getCell(this.cell2.x, this.cell2.y).label\n  }\n}\n","import {UserError} from \"../parser/errors\";\nimport {BaseNode} from \"./BaseNode\";\nimport {RangeNode} from \"./RangeNode\";\n\nexport class FunctionCallNode extends BaseNode {\n  constructor(identifier, args, token) {\n    super(token);\n    this.identifier = identifier;\n    this.args = args;\n  }\n\n  exec(env) {\n    const func = env.getFunction(this.identifier);\n\n    if (this.args.length !== func.args.length) {\n      throw new UserError(`${func.args.length} params function called with ${this.args.length} params.`);\n    }\n\n    const argsValues = [];\n    for (const a of this.args) {\n      argsValues.push(a.exec(env));\n    }\n\n    env.newScope();\n    for (let i = 0; i < this.args.length; i++) {\n      if (argsValues[i] instanceof RangeNode) {\n        env.setReference(func.args[i].identifier, argsValues[i])\n      }\n      env.setVariable(func.args[i].identifier, argsValues[i]);\n    }\n\n    for (const b of func.block) {\n      try {\n        b.exec(env);\n      } catch (e) {\n        if (e.name === 'returnHandler') {\n          env.popScope();\n          return e.result;\n        } else {\n          env.popScope();\n          throw e;\n        }\n      }\n    }\n\n    env.popScope();\n    return undefined\n  }\n\n  unParse(env) {\n    const args = [];\n    for (const a of this.args) {\n      args.push(a.unParse(env));\n    }\n    return this.identifier + '(' + args.join(',') + ')'\n  }\n\n  findCellsReferenced(env) {\n    let cells = []\n    for (let a of this.args) {\n      cells = cells.concat(a.findCellsReferenced(env));\n    }\n    return cells;\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\nimport {errorInfoExecDecorator} from \"../utils\";\n\nexport class VariableNode extends BaseNode {\n\n  constructor(identifier, token) {\n    super(token);\n    this.identifier = identifier;\n  }\n\n  @errorInfoExecDecorator\n  exec(env) {\n    // console.log(this.identifier)\n    // console.log(env.referencesScopes[0])\n    const x = env.getReference(this.identifier);\n    if (x !== undefined) {\n      return x.exec(env)\n    }\n    return env.getVarByName(this.identifier).value;\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\nimport {errorInfoExecDecorator} from \"../utils\";\n\nexport class CellNode extends BaseNode {\n\n  constructor(x,y,token) {\n    super(token);\n    this.x = x;\n    this.y = y;\n  }\n\n  @errorInfoExecDecorator\n  exec(env) {\n    return env.getCell(this.x, this.y).value;\n  }\n\n  findCellsReferenced(env) {\n    return [env.getCell(this.x, this.y)];\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\nimport {errorInfoExecDecorator} from \"../utils\";\n\nexport class DynamicCellNode extends BaseNode {\n\n  constructor(x,y, token) {\n    super(token);\n    this.x = x;\n    this.y = y;\n  }\n\n  @errorInfoExecDecorator\n  exec(env) {\n    const x = this.x.exec(env);\n    const y = this.y.exec(env);\n    return env.getCell(x, y).value;\n  }\n\n  unParse(env) {\n    const x = this.x.exec(env);\n    const y = this.y.exec(env);\n    return env.getCell(x, y).label;\n  }\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\nimport {UserError} from \"../parser/errors\";\nimport {VariableNode} from \"./VariableNode\";\nimport {CellNode} from \"./CellNode\";\nimport {NumberNode} from \"./NumberNode\";\nimport {BaseNode} from \"./BaseNode\";\nimport _ from 'lodash';\nimport {DynamicCellNode} from \"./DynamicCellNode\";\nimport {errorInfoExecDecorator} from \"../utils\";\nimport {RangeNode} from \"./RangeNode\";\nimport {FunctionCallNode} from \"./FunctionCallNode\";\n\nexport class AssignmentNode extends BinaryOperationNode {\n\n  @errorInfoExecDecorator\n  exec(env) {\n\n    let left = this.left\n    // check if this left is an reference\n    if (left instanceof VariableNode) {\n      // if reference get referenced value\n      const x = env.getReference(left.identifier);\n      if (x !== undefined) {\n        left = x\n      }\n    }\n    if (left instanceof VariableNode) {\n      env.setVariable(left.value, this.right.exec(env));\n    } else if (left instanceof CellNode || left instanceof DynamicCellNode) {\n      let x, y;\n      if (left instanceof CellNode) {\n        x = left.x;\n        y = left.y;\n      } else {\n        x = left.x.exec(env);\n        y = left.y.exec(env);\n      }\n\n      let ast = _.cloneDeep(this.right);\n\n      // hack wrapper to stay DRY\n      const wrapper = {ast: ast};\n      replaceVariablesWithConstants(wrapper, env);\n      ast = wrapper.ast;\n      const formula = \"=\" + ast.unParse(env);\n      env.setCell(x, y, formula);\n\n    } else {\n      throw new UserError(\"Assign not to variable\");\n    }\n  }\n}\n\nfunction replaceVariablesWithConstants(ast, env) {\n  for (let property in ast) {\n    if (ast[property] instanceof VariableNode) {\n      const x = env.getReference(ast[property].identifier);\n      if (x !== undefined) {\n        ast[property] = x;\n      }\n    }\n    if (ast[property] instanceof VariableNode) {\n      const varValue = ast[property].exec(env);\n      ast[property] = new NumberNode({value: varValue, text: varValue.toString()});\n    } else if (ast[property] instanceof FunctionCallNode) {\n      replaceVariablesWithConstants(ast[property].args, env);\n    } else if (ast[property] instanceof BaseNode) {\n      replaceVariablesWithConstants(ast[property], env);\n    }\n\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\n\nexport class WhileNode extends BaseNode {\n  constructor(condition, block, token) {\n    super(token);\n    this.condition = condition;\n    this.block = block;\n  }\n\n  exec(env) {\n    while (this.condition.exec(env)) {\n      for (const line of this.block) {\n        line.exec(env);\n      }\n    }\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\n\nexport class ifElseNode extends BaseNode {\n  constructor(condition, block, elseBlock, token) {\n    super(token);\n    this.condition = condition;\n    this.block = block;\n    this.elseBlock = elseBlock;\n  }\n\n  exec(env) {\n    if (this.condition.exec(env)) {\n      for (const line of this.block) {\n        line.exec(env);\n      }\n    } else {\n      if (this.elseBlock !== null) {\n        for (const line of this.elseBlock) {\n          line.exec(env);\n        }\n      }\n    }\n  }\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\n\nexport class EqualNode extends BinaryOperationNode {\n  exec(environ) {\n    return this.left.exec(environ) === this.right.exec(environ);\n  }\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\n\nexport class GreaterEqualNode extends BinaryOperationNode {\n  exec(env) {\n    return this.left.exec(env) >= this.right.exec(env);\n  }\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\n\nexport class LessEqualNode extends BinaryOperationNode {\n  exec(env) {\n    return this.left.exec(env) <= this.right.exec(env);\n  }\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\n\nexport class LessNode extends BinaryOperationNode {\n  exec(env) {\n    return this.left.exec(env) < this.right.exec(env);\n  }\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\n\nexport class GreaterNode extends BinaryOperationNode {\n  exec(env) {\n    return this.left.exec(env) > this.right.exec(env);\n  }\n}\n","import {BinaryOperationNode} from \"./BinaryOperationNode\";\n\nexport class NotEqualNode extends BinaryOperationNode {\n  exec(env) {\n    return this.left.exec(env) !== this.right.exec(env);\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\n\nexport class FunctionDefNode extends BaseNode{\n  constructor(identifier, args,block, token) {\n    super(token);\n    this.identifier = identifier;\n    this.args = args;\n    this.block = block;\n  }\n  exec(env) {\n    env.setFunction(this.identifier, this.args, this.block);\n  }\n}\n\n\n\n// mozna wywolac funkcje z argumentami pozycyjnymi i wtedy normalnie poszczegolne wartosci sa kopiowane do funkcji\n// 1 argument wywolania do 1 argumentu funkcji itp\n// (maybe) mozna wywolac funkcje podajac przed argumentem *, wszystkie argument z * sa zbierane do jednego argumentu\n// funkcji, ktory tez jest zdefiniowane z * z przodu i mozna po nim iterowac\n","import {BaseNode} from \"./BaseNode\";\n\nexport class ReferenceNode extends BaseNode {\n  constructor(identifier, referenced, token) {\n    super(token);\n    this.identifier = identifier;\n    this.referenced = referenced;\n  }\n\n  exec(env) {\n    env.setReference(this.identifier, this.referenced);\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\nimport {returnHandler} from \"../parser/errors\";\n\nexport class ReturnNode extends BaseNode {\n  constructor(expr, token) {\n    super(token);\n    this.expr = expr\n  }\n\n  exec(env) {\n    throw new returnHandler(this.expr.exec(env));\n  }\n}\n","import {BaseNode} from \"./BaseNode\";\nimport {VariableNode} from \"./VariableNode\";\nimport {UserError} from \"../parser/errors\";\nimport {RangeNode} from \"./RangeNode\";\nimport {CellNode} from \"./CellNode\";\nimport {errorInfoExecDecorator} from \"../utils\";\n\nexport class ForNode extends BaseNode {\n  constructor(variableName, range, block, token) {\n    super(token);\n    this.variableName = variableName;\n    this.range = range;\n    this.block = block;\n  }\n\n  @errorInfoExecDecorator\n  exec(env) {\n\n    let range;\n    if (this.range instanceof VariableNode) {\n      range = env.getReference(this.range.identifier);\n    } else {\n      range = this.range;\n    }\n    if (!(range instanceof RangeNode)) {\n      throw new UserError(\"Iterating over non iterable\");\n    }\n\n    const cells = range.getCells(env);\n    for (const cell of cells) {\n      env.setReference(this.variableName, new CellNode(cell.x, cell.y, {}));\n      for (const line of this.block) {\n        line.exec(env);\n      }\n    }\n\n  }\n}\n","import {AdditionNode} from \"../nodes/AdditionNode\";\nimport {SubtractionNode} from \"../nodes/SubtractionNode\";\nimport {MultiplicationNode} from \"../nodes/MultiplicationNode\";\nimport {DivisionNode} from \"../nodes/DivisionNode\";\nimport {NumberNode} from \"../nodes/NumberNode\";\nimport {NegativeNode} from \"../nodes/NegativeNode\";\nimport {FunctionCallNode} from \"../nodes/FunctionCallNode\";\nimport {VariableNode} from \"../nodes/VariableNode\";\nimport {RangeNode} from \"../nodes/RangeNode\";\nimport {AssignmentNode} from \"../nodes/AssignmentNode\";\nimport {WhileNode} from \"../nodes/WhileNode\";\nimport {ifElseNode} from \"../nodes/IfElseNode\";\nimport {CellNode} from \"../nodes/CellNode\";\nimport {EqualNode} from \"../nodes/EqualNode\";\nimport {GreaterEqualNode} from \"../nodes/GreaterEqualNode\";\nimport {LessEqualNode} from \"../nodes/LessEqualNode\";\nimport {LessNode} from \"../nodes/LessNode\";\nimport {GreaterNode} from \"../nodes/GreaterNode\";\nimport {NotEqualNode} from \"../nodes/NotEqualNode\";\nimport {FunctionDefNode} from \"../nodes/FunctionDefNode\";\nimport {DynamicCellNode} from \"../nodes/DynamicCellNode\";\nimport {ReferenceNode} from \"../nodes/ReferenceNode\";\nimport {ReturnNode} from \"../nodes/ReturnNode\";\nimport {ForNode} from \"../nodes/ForNode\";\n\nexport function addition([a, token, b]) {\n  return new AdditionNode(a, b, token);\n}\n\nexport function subtraction([a, token, b]) {\n  return new SubtractionNode(a, b, token);\n}\n\nexport function multiplication([a, token, b]) {\n  return new MultiplicationNode(a, b, token);\n\n}\n\nexport function division([a, token, b]) {\n  return new DivisionNode(a, b, token);\n\n}\n\nexport function number([token]) {\n  return new NumberNode(token)\n}\n\nexport function negative([token, operand]) {\n  return new NegativeNode(operand, token);\n}\n\nexport function functionCall([token, _, args]) {\n  return new FunctionCallNode(token.value, args, token);\n}\n\nexport function equal([a, token, b]) {\n  return new EqualNode(a, b, token);\n}\n\nexport function greaterEqual([a, token, b]) {\n  return new GreaterEqualNode(a, b, token);\n}\n\nexport function lessEqual([a, token, b]) {\n  return new LessEqualNode(a, b, token);\n}\n\nexport function less([a, token, b]) {\n  return new LessNode(a, b, token);\n}\n\nexport function greater([a, token, b]) {\n  return new GreaterNode(a, b, token);\n}\n\nexport function notEqual([a, token, b]) {\n  return new NotEqualNode(a, b, token);\n}\n\n\nexport function variable([token]) {\n  return new VariableNode(token.value, token);\n}\n\nexport function range([cell1, token, cell2]) {\n  return new RangeNode(cell1, cell2, token);\n}\n\nexport function list([first, list]) {\n  const result = [first];\n  for (const el of list) {\n    result.push(el[0]);\n  }\n  return result;\n}\n\nexport function assigment([left, token, right]) {\n  return new AssignmentNode(left, right, token);\n}\n\nexport function block([, code]) {\n  return code;\n}\n\nexport function whileLoop([token, expr, , block]) {\n  return new WhileNode(expr, block, token);\n}\n\nexport function ifElse([token, expr, , block, elseBlock]) {\n  if (elseBlock !== null) {\n    elseBlock = elseBlock[0];\n  }\n  return new ifElseNode(expr, block, elseBlock, token);\n}\n\nexport function elseBlock([, , block]) {\n  return block;\n}\n\nexport function emptyList() {\n  return []\n}\n\nexport function cell([token]) {\n  return new CellNode(token.value.x, token.value.y, token);\n}\n\nexport function functionDef([_def, token, _lparen, args, _rparen, _end, block]) {\n  return new FunctionDefNode(token.value, args, block, token)\n}\n\nexport function dynamicCell([_lsquare, x, _semicolon, y, token]) {\n  return new DynamicCellNode(x, y, token);\n}\n\nexport function reference([identifierToken, _assign, _equal, referenced]) {\n  return new ReferenceNode(identifierToken.value, referenced, identifierToken);\n}\n\nexport function returnNode([token, expr]) {\n  return new ReturnNode(expr,token)\n}\n\nexport function argsList([first, list]) {\n  const result = [first];\n  for (const el of list) {\n    result.push(el[1]);\n  }\n  return result;\n}\n\nexport function forLoop([_forToken, identifierToken, _inToken, expr, _ends, block]) {\n  return new ForNode(identifierToken.value, expr, block, identifierToken);\n}\n\n","import * as moo from 'moo'\nimport IndentedLexer from './indentedLexer'\nimport {getCellIndexes} from \"../utils\";\n\n\nconst tokens = {\n  ws: /[ \\t\\u00A0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u3000]+/,\n  end: {match: /\\n/, lineBreaks: true},\n  cell: {\n    match: /[a-zA-Z]+[0-9]+/,\n    value: x => getCellIndexes(x),\n  },\n  identifier: {\n    match: /[a-zA-Z]+/,\n    type: moo.keywords({\n      \"kwIf\": \"if\",\n      \"kwWhile\": \"while\",\n      \"kwFor\": \"for\",\n      \"kwElse\": \"else\",\n      \"kwDef\": \"def\",\n      \"kwReturn\": \"return\",\n      \"kwIn\": \"in\",\n    })\n  },\n  ampersand: '&',\n  dot: '.',\n  comma: ',',\n  lparen: '(',\n  rparen: ')',\n  lsquare: '[',\n  rsquare: ']',\n  plus: '+',\n  asterisk: '*',\n  slash: '/',\n  minus: '-',\n  semicolon: ';',\n  colon: ':',\n  equal: '==',\n  greaterEqual: '>=',\n  lessEqual: '<=',\n  less: '<',\n  greater: '>',\n  notEqual: '!=',\n  assign: '=',\n  string: /\".*?\"/,\n  number: {\n    match: /[1-9][0-9]*(?:\\.[0-9]*)?|0(?:\\.[0-9]+)?/, // (?: non capturing group\n    value: x => parseFloat(x),\n  },\n\n};\n\nexport const lexer = new IndentedLexer(moo.compile(tokens), 'ws', 'end');\n\n","// Generated automatically by nearley, version 2.19.1\n// http://github.com/Hardmath123/nearley\nfunction id(x) { return x[0]; }\n\n  /* eslint-disable */\n  import * as p from './parserPostProcessors.js'\n  import {lexer} from './lexer.js'\nlet Lexer = lexer;\nlet ParserRules = [\n    {\"name\": \"formulaEntry\", \"symbols\": [\"sum\"]},\n    {\"name\": \"expr\", \"symbols\": [\"comparison\"], \"postprocess\": id},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\"], \"postprocess\": id},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"equal\") ? {type: \"equal\"} : equal), \"sum\"], \"postprocess\": p.equal},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"greaterEqual\") ? {type: \"greaterEqual\"} : greaterEqual), \"sum\"], \"postprocess\": p.greaterEqual},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"lessEqual\") ? {type: \"lessEqual\"} : lessEqual), \"sum\"], \"postprocess\": p.lessEqual},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"less\") ? {type: \"less\"} : less), \"sum\"], \"postprocess\": p.less},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"greater\") ? {type: \"greater\"} : greater), \"sum\"], \"postprocess\": p.greater},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"notEqual\") ? {type: \"notEqual\"} : notEqual), \"sum\"], \"postprocess\": p.notEqual},\n    {\"name\": \"sum\", \"symbols\": [\"product\"], \"postprocess\": id},\n    {\"name\": \"sum\", \"symbols\": [\"sum\", (lexer.has(\"plus\") ? {type: \"plus\"} : plus), \"product\"], \"postprocess\": p.addition},\n    {\"name\": \"sum\", \"symbols\": [\"sum\", (lexer.has(\"minus\") ? {type: \"minus\"} : minus), \"product\"], \"postprocess\": p.subtraction},\n    {\"name\": \"product\", \"symbols\": [\"primary\"], \"postprocess\": id},\n    {\"name\": \"product\", \"symbols\": [\"product\", (lexer.has(\"asterisk\") ? {type: \"asterisk\"} : asterisk), \"primary\"], \"postprocess\": p.multiplication},\n    {\"name\": \"product\", \"symbols\": [\"product\", (lexer.has(\"slash\") ? {type: \"slash\"} : slash), \"primary\"], \"postprocess\": p.division},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"expr\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": (data) => data[1]},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"number\") ? {type: \"number\"} : number)], \"postprocess\": p.number},\n    {\"name\": \"primary\", \"symbols\": [\"variable\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [\"function_call\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [\"range\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [\"cell\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"minus\") ? {type: \"minus\"} : minus), \"primary\"], \"postprocess\": p.negative},\n    {\"name\": \"primary\", \"symbols\": [\"dynamicCell\"], \"postprocess\": id},\n    {\"name\": \"dynamicCell\", \"symbols\": [(lexer.has(\"lsquare\") ? {type: \"lsquare\"} : lsquare), \"sum\", (lexer.has(\"semicolon\") ? {type: \"semicolon\"} : semicolon), \"sum\", (lexer.has(\"rsquare\") ? {type: \"rsquare\"} : rsquare)], \"postprocess\": p.dynamicCell},\n    {\"name\": \"cell\", \"symbols\": [(lexer.has(\"cell\") ? {type: \"cell\"} : cell)], \"postprocess\": p.cell},\n    {\"name\": \"variable\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier)], \"postprocess\": p.variable},\n    {\"name\": \"function_call\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier), (lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"args\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": p.functionCall},\n    {\"name\": \"function_call\", \"symbols\": [(lexer.has(\"kwIf\") ? {type: \"kwIf\"} : kwIf), (lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"args\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": p.functionCall},\n    {\"name\": \"args$ebnf$1\", \"symbols\": []},\n    {\"name\": \"args$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"comma\") ? {type: \"comma\"} : comma), \"expr\"]},\n    {\"name\": \"args$ebnf$1\", \"symbols\": [\"args$ebnf$1\", \"args$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"args\", \"symbols\": [\"expr\", \"args$ebnf$1\"], \"postprocess\": p.argsList},\n    {\"name\": \"args\", \"symbols\": [], \"postprocess\": p.emptyList},\n    {\"name\": \"range\", \"symbols\": [\"cell\", (lexer.has(\"colon\") ? {type: \"colon\"} : colon), \"cell\"], \"postprocess\": p.range},\n    {\"name\": \"entry$ebnf$1\", \"symbols\": []},\n    {\"name\": \"entry$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end)]},\n    {\"name\": \"entry$ebnf$1\", \"symbols\": [\"entry$ebnf$1\", \"entry$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"entry$ebnf$2\", \"symbols\": []},\n    {\"name\": \"entry$ebnf$2$subexpression$1\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end)]},\n    {\"name\": \"entry$ebnf$2\", \"symbols\": [\"entry$ebnf$2\", \"entry$ebnf$2$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"entry\", \"symbols\": [\"entry$ebnf$1\", \"code\", \"entry$ebnf$2\"], \"postprocess\": (data) => [data[1]]},\n    {\"name\": \"code$ebnf$1\", \"symbols\": []},\n    {\"name\": \"code$ebnf$1$subexpression$1\", \"symbols\": [\"statement\"]},\n    {\"name\": \"code$ebnf$1\", \"symbols\": [\"code$ebnf$1\", \"code$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"code\", \"symbols\": [\"statement\", \"code$ebnf$1\"], \"postprocess\": p.list},\n    {\"name\": \"statement\", \"symbols\": [\"expr\", \"ends\"], \"postprocess\": id},\n    {\"name\": \"statement\", \"symbols\": [\"reference\", \"ends\"], \"postprocess\": id},\n    {\"name\": \"statement\", \"symbols\": [\"return\", \"ends\"], \"postprocess\": id},\n    {\"name\": \"statement\", \"symbols\": [\"assigment\", \"ends\"], \"postprocess\": id},\n    {\"name\": \"statement$ebnf$1\", \"symbols\": []},\n    {\"name\": \"statement$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end)]},\n    {\"name\": \"statement$ebnf$1\", \"symbols\": [\"statement$ebnf$1\", \"statement$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"statement\", \"symbols\": [\"blockStatement\", \"statement$ebnf$1\"], \"postprocess\": id},\n    {\"name\": \"blockStatement$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end)]},\n    {\"name\": \"blockStatement$ebnf$1\", \"symbols\": [\"blockStatement$ebnf$1$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"blockStatement$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"blockStatement\", \"symbols\": [(lexer.has(\"kwWhile\") ? {type: \"kwWhile\"} : kwWhile), \"expr\", \"blockStatement$ebnf$1\", \"block\"], \"postprocess\": p.whileLoop},\n    {\"name\": \"blockStatement$ebnf$2$subexpression$1\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end)]},\n    {\"name\": \"blockStatement$ebnf$2\", \"symbols\": [\"blockStatement$ebnf$2$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"blockStatement$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"blockStatement$ebnf$3$subexpression$1\", \"symbols\": [\"else\"]},\n    {\"name\": \"blockStatement$ebnf$3\", \"symbols\": [\"blockStatement$ebnf$3$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"blockStatement$ebnf$3\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"blockStatement\", \"symbols\": [(lexer.has(\"kwIf\") ? {type: \"kwIf\"} : kwIf), \"expr\", \"blockStatement$ebnf$2\", \"block\", \"blockStatement$ebnf$3\"], \"postprocess\": p.ifElse},\n    {\"name\": \"blockStatement$ebnf$4$subexpression$1\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end)]},\n    {\"name\": \"blockStatement$ebnf$4\", \"symbols\": [\"blockStatement$ebnf$4$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"blockStatement$ebnf$4\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"blockStatement\", \"symbols\": [(lexer.has(\"kwDef\") ? {type: \"kwDef\"} : kwDef), (lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier), (lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"params\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen), \"blockStatement$ebnf$4\", \"block\"], \"postprocess\": p.functionDef},\n    {\"name\": \"blockStatement$ebnf$5$subexpression$1\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end)]},\n    {\"name\": \"blockStatement$ebnf$5\", \"symbols\": [\"blockStatement$ebnf$5$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"blockStatement$ebnf$5\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"blockStatement\", \"symbols\": [(lexer.has(\"kwFor\") ? {type: \"kwFor\"} : kwFor), (lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier), (lexer.has(\"kwIn\") ? {type: \"kwIn\"} : kwIn), \"expr\", \"blockStatement$ebnf$5\", \"block\"], \"postprocess\": p.forLoop},\n    {\"name\": \"else\", \"symbols\": [(lexer.has(\"kwElse\") ? {type: \"kwElse\"} : kwElse), \"ends\", \"block\"], \"postprocess\": p.elseBlock},\n    {\"name\": \"assigment\", \"symbols\": [\"variable\", (lexer.has(\"assign\") ? {type: \"assign\"} : assign), \"expr\"], \"postprocess\": p.assigment},\n    {\"name\": \"assigment\", \"symbols\": [\"cell\", (lexer.has(\"assign\") ? {type: \"assign\"} : assign), \"expr\"], \"postprocess\": p.assigment},\n    {\"name\": \"assigment\", \"symbols\": [\"dynamicCell\", (lexer.has(\"assign\") ? {type: \"assign\"} : assign), \"expr\"], \"postprocess\": p.assigment},\n    {\"name\": \"block\", \"symbols\": [(lexer.has(\"indent\") ? {type: \"indent\"} : indent), \"code\", (lexer.has(\"dedent\") ? {type: \"dedent\"} : dedent)], \"postprocess\": p.block},\n    {\"name\": \"ends$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end)]},\n    {\"name\": \"ends$ebnf$1\", \"symbols\": [\"ends$ebnf$1$subexpression$1\"]},\n    {\"name\": \"ends$ebnf$1$subexpression$2\", \"symbols\": [(lexer.has(\"end\") ? {type: \"end\"} : end)]},\n    {\"name\": \"ends$ebnf$1\", \"symbols\": [\"ends$ebnf$1\", \"ends$ebnf$1$subexpression$2\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"ends\", \"symbols\": [\"ends$ebnf$1\"], \"postprocess\": null},\n    {\"name\": \"reference\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier), (lexer.has(\"assign\") ? {type: \"assign\"} : assign), (lexer.has(\"ampersand\") ? {type: \"ampersand\"} : ampersand), \"range\"], \"postprocess\": p.reference},\n    {\"name\": \"reference\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier), (lexer.has(\"assign\") ? {type: \"assign\"} : assign), (lexer.has(\"ampersand\") ? {type: \"ampersand\"} : ampersand), \"cell\"], \"postprocess\": p.reference},\n    {\"name\": \"reference\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier), (lexer.has(\"assign\") ? {type: \"assign\"} : assign), (lexer.has(\"ampersand\") ? {type: \"ampersand\"} : ampersand), \"variable\"], \"postprocess\": p.reference},\n    {\"name\": \"return\", \"symbols\": [(lexer.has(\"kwReturn\") ? {type: \"kwReturn\"} : kwReturn), \"expr\"], \"postprocess\": p.returnNode},\n    {\"name\": \"params$ebnf$1\", \"symbols\": []},\n    {\"name\": \"params$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"comma\") ? {type: \"comma\"} : comma), \"variable\"]},\n    {\"name\": \"params$ebnf$1\", \"symbols\": [\"params$ebnf$1\", \"params$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"params\", \"symbols\": [\"variable\", \"params$ebnf$1\"], \"postprocess\": p.argsList},\n    {\"name\": \"params\", \"symbols\": [], \"postprocess\": p.emptyList}\n];\nlet ParserStart = \"entry\";\nexport default { Lexer, ParserRules, ParserStart };\n","// Generated automatically by nearley, version 2.19.1\n// http://github.com/Hardmath123/nearley\nfunction id(x) { return x[0]; }\n\n  /* eslint-disable */\n  import * as p from './parserPostProcessors.js'\n  import {lexer} from './lexer.js'\nlet Lexer = lexer;\nlet ParserRules = [\n    {\"name\": \"formulaEntry\", \"symbols\": [\"sum\"]},\n    {\"name\": \"expr\", \"symbols\": [\"comparison\"], \"postprocess\": id},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\"], \"postprocess\": id},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"equal\") ? {type: \"equal\"} : equal), \"sum\"], \"postprocess\": p.equal},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"greaterEqual\") ? {type: \"greaterEqual\"} : greaterEqual), \"sum\"], \"postprocess\": p.greaterEqual},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"lessEqual\") ? {type: \"lessEqual\"} : lessEqual), \"sum\"], \"postprocess\": p.lessEqual},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"less\") ? {type: \"less\"} : less), \"sum\"], \"postprocess\": p.less},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"greater\") ? {type: \"greater\"} : greater), \"sum\"], \"postprocess\": p.greater},\n    {\"name\": \"comparison\", \"symbols\": [\"sum\", (lexer.has(\"notEqual\") ? {type: \"notEqual\"} : notEqual), \"sum\"], \"postprocess\": p.notEqual},\n    {\"name\": \"sum\", \"symbols\": [\"product\"], \"postprocess\": id},\n    {\"name\": \"sum\", \"symbols\": [\"sum\", (lexer.has(\"plus\") ? {type: \"plus\"} : plus), \"product\"], \"postprocess\": p.addition},\n    {\"name\": \"sum\", \"symbols\": [\"sum\", (lexer.has(\"minus\") ? {type: \"minus\"} : minus), \"product\"], \"postprocess\": p.subtraction},\n    {\"name\": \"product\", \"symbols\": [\"primary\"], \"postprocess\": id},\n    {\"name\": \"product\", \"symbols\": [\"product\", (lexer.has(\"asterisk\") ? {type: \"asterisk\"} : asterisk), \"primary\"], \"postprocess\": p.multiplication},\n    {\"name\": \"product\", \"symbols\": [\"product\", (lexer.has(\"slash\") ? {type: \"slash\"} : slash), \"primary\"], \"postprocess\": p.division},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"expr\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": (data) => data[1]},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"number\") ? {type: \"number\"} : number)], \"postprocess\": p.number},\n    {\"name\": \"primary\", \"symbols\": [\"variable\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [\"function_call\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [\"range\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [\"cell\"], \"postprocess\": id},\n    {\"name\": \"primary\", \"symbols\": [(lexer.has(\"minus\") ? {type: \"minus\"} : minus), \"primary\"], \"postprocess\": p.negative},\n    {\"name\": \"primary\", \"symbols\": [\"dynamicCell\"], \"postprocess\": id},\n    {\"name\": \"dynamicCell\", \"symbols\": [(lexer.has(\"lsquare\") ? {type: \"lsquare\"} : lsquare), \"sum\", (lexer.has(\"semicolon\") ? {type: \"semicolon\"} : semicolon), \"sum\", (lexer.has(\"rsquare\") ? {type: \"rsquare\"} : rsquare)], \"postprocess\": p.dynamicCell},\n    {\"name\": \"cell\", \"symbols\": [(lexer.has(\"cell\") ? {type: \"cell\"} : cell)], \"postprocess\": p.cell},\n    {\"name\": \"variable\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier)], \"postprocess\": p.variable},\n    {\"name\": \"function_call\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier), (lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"args\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": p.functionCall},\n    {\"name\": \"function_call\", \"symbols\": [(lexer.has(\"kwIf\") ? {type: \"kwIf\"} : kwIf), (lexer.has(\"lparen\") ? {type: \"lparen\"} : lparen), \"args\", (lexer.has(\"rparen\") ? {type: \"rparen\"} : rparen)], \"postprocess\": p.functionCall},\n    {\"name\": \"args$ebnf$1\", \"symbols\": []},\n    {\"name\": \"args$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"comma\") ? {type: \"comma\"} : comma), \"expr\"]},\n    {\"name\": \"args$ebnf$1\", \"symbols\": [\"args$ebnf$1\", \"args$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"args\", \"symbols\": [\"expr\", \"args$ebnf$1\"], \"postprocess\": p.argsList},\n    {\"name\": \"args\", \"symbols\": [], \"postprocess\": p.emptyList},\n    {\"name\": \"range\", \"symbols\": [\"cell\", (lexer.has(\"colon\") ? {type: \"colon\"} : colon), \"cell\"], \"postprocess\": p.range}\n];\nlet ParserStart = \"formulaEntry\";\nexport default { Lexer, ParserRules, ParserStart };\n","import * as nearley from 'nearley';\nimport grammar from \"./grammar.js\";\nimport formulaGrammar from \"./formulaGrammar.js\";\n\nimport {UserError} from \"./errors\";\n\nexport class Parser {\n  constructor() {\n    this.parser = new nearley.Parser(nearley.Grammar.fromCompiled(grammar));\n  }\n\n  feed(s) {\n    try {\n      this.parser.feed(s);\n    } catch (e) {\n      throw new UserError(e.message);\n    }\n  }\n\n  get results() {\n    try {\n      return this.parser.results[0][0];\n    }catch (e) {\n      return null;\n    }\n  }\n}\n\n\nexport class FormulaParser {\n  constructor() {\n    this.parser = new nearley.Parser(nearley.Grammar.fromCompiled(formulaGrammar));\n  }\n\n  feed(s) {\n    try {\n      this.parser.feed(s);\n    } catch (e) {\n      throw new UserError(\"Syntax error\");\n    }\n  }\n\n  get results() {\n    try {\n      return this.parser.results[0][0];\n    }catch (e) {\n      return null;\n    }\n  }\n}\n","export class Variable {\n\n  value = null;\n\n  constructor(value) {\n    this.value = value;\n  }\n}\n","import {observable} from \"mobx\";\n\nexport class Cell {\n\n  @observable formula = null;\n  @observable value = null;\n  @observable background = null;\n  @observable error = null;\n\n  ast = null;\n  // vars that observe us -> we are used in their formula\n  observers = [];\n  // vars that we observe for changes -> we use them in our formula\n  subjects = [];\n\n  constructor(x, y, label) {\n    this.x = x;\n    this.y = y;\n    this.label = label;\n  }\n\n  reset() {\n    this.formula = null\n    this.value = null\n    this.background = null\n    this.error = null\n    this.ast = null;\n    this.observers = [];\n    this.subjects = [];\n  }\n\n  unregisterFromAllSubjects() {\n    for (const cell of this.subjects) {\n      cell._unregisterObserver(this);\n    }\n    this.subjects = [];\n  }\n\n  observe(cell) {\n    cell.observers.push(this);\n    this.subjects.push(cell);\n  }\n\n  _unregisterObserver(v) {\n    const index = this.observers.indexOf(v);\n    if (index === this.observers.length - 1) {\n      this.observers.pop();\n    } else {\n      this.observers[index] = this.observers.pop();\n    }\n  }\n}\n","import {UserError} from \"../parser/errors\";\nimport {FormulaParser} from \"../parser/parsers\";\nimport {isFormula, letterLabelGenerator, topologicalSort} from \"../utils\";\nimport {Variable} from \"./Variable\";\nimport {Cell} from \"./Cell\";\nimport {ReferenceNode} from \"../nodes/ReferenceNode\";\n\nexport class Environment {\n\n  constructor(x, y) {\n    this.funcitons = {};\n    this.x = x;\n    this.y = y;\n    this.cells = Array(y);\n    for (let i = 0; i < y; i++) {\n      this.cells[i] = Array(x);\n      const gen = letterLabelGenerator();\n      for (let j = 0; j < x; j++) {\n        const label = gen.next().value + (i + 1).toString();\n        this.cells[i][j] = new Cell(j, i, label);\n      }\n    }\n\n    // new scope is only used in functions (to prevent them from accessing external variables)\n    this.variablesScopes = [{}];\n    this.referencesScopes = [{}];\n  }\n\n  reset() {\n    for (let i = 0; i < this.y; i++) {\n      for (let j = 0; j < this.x; j++) {\n        this.cells[i][j].reset();\n      }\n    }\n\n  }\n\n  setCell(x, y, string) {\n    const cell = this.getCell(x, y);\n    cell.unregisterFromAllSubjects();\n    try {\n      if (isFormula(string)) {\n        if (string.length === 1) {\n          return\n        }\n        this._setCellFormula(cell, string);\n      } else {\n        this._setCellValue(cell, string);\n      }\n\n      this._updateObservers(cell);\n      cell.error = null;\n    } catch (e) {\n      if (e.name !== \"UserError\") {\n        throw e;\n      }\n\n      cell.error = e.message.split(\"\\n\")[1];\n    }\n  }\n\n\n  _setCellFormula(cell, formula) {\n    cell.formula = formula;\n    const parser = new FormulaParser();\n    parser.feed(formula.substring(1));\n    cell.ast = parser.results;\n    cell.value = cell.ast.exec(this);\n    const varsReferenced = cell.ast.findCellsReferenced(this);\n    for (const v of varsReferenced) {\n      cell.observe(v);\n    }\n  }\n\n  _setCellValue(variable, value) {\n    const x = parseFloat(value);\n    if (!isNaN(x)) {\n      variable.value = x;\n    } else {\n      variable.value = value;\n    }\n    variable.formula = null;\n    variable.ast = null;\n  }\n\n  getCellsByRange(start, end) {\n    const x1 = start.x;\n    const y1 = start.y;\n    const x2 = end.x;\n    const y2 = end.y;\n\n    if (this.x <= x1 || this.y <= y1) {\n      throw new UserError(`No cell: ${start}`)\n    }\n    if (this.x <= x2 || this.y <= y2) {\n      throw new UserError(`No cell: ${end}`)\n    }\n\n    const result = [];\n\n    for (let i = y1; i <= y2; i++) {\n      for (let j = x1; j <= x2; j++) {\n        result.push(this.cells[i][j]);\n      }\n    }\n\n    return result;\n  }\n\n  getCell(x, y) {\n    let cell;\n    try {\n      cell = this.cells[y][x];\n    } catch (e) {\n    }\n    if (cell === undefined) {\n      throw new UserError(\"No such cell\");\n    }\n    return cell;\n  }\n\n\n  _updateObservers(cell) {\n    for (const x of topologicalSort(cell)) {\n      x.value = x.ast.exec(this);\n    }\n  }\n\n\n  setVariable(identifier, value) {\n    const variables = this.variablesScopes[this.variablesScopes.length - 1];\n    let variable;\n    try {\n      variable = this.getVarByName(identifier);\n      variable.value = value;\n    } catch (e) {\n      variables[identifier] = new Variable(value);\n    }\n  }\n\n\n  getVarByName(identifier) {\n    const variables = this.variablesScopes[this.variablesScopes.length - 1];\n    if (variables.hasOwnProperty(identifier)) {\n      return variables[identifier];\n    } else {\n      throw new UserError(`No variable: ${identifier}`);\n    }\n  }\n\n  setReference(identifier, node) {\n    if (!identifier instanceof String) {\n      console.log(identifier)\n      throw Error('setReference called with wrong type');\n    }\n    this.referencesScopes[this.referencesScopes.length - 1][identifier] = node;\n  }\n\n  getReference(identifier) {\n    if (!identifier instanceof String) {\n      throw Error('getReference called with wrong type');\n    }\n    // console.log(identifier)\n    // console.log(this.referencesScopes)\n    let x = this.referencesScopes[this.referencesScopes.length - 1][identifier];\n    // console.log(x)\n    if (x instanceof ReferenceNode) {\n      x = this.getReference(x.identifier);\n    }\n    return x;\n  }\n\n  setFunction(identifier, args, block) {\n    this.funcitons[identifier] = {args: args, block: block};\n  }\n\n  getFunction(identifier) {\n    if (!identifier instanceof String || !this.funcitons.hasOwnProperty(identifier)) {\n      throw new UserError(`No function: ${identifier}`);\n    }\n    return this.funcitons[identifier];\n  }\n\n  newScope() {\n    this.variablesScopes.push({});\n    this.referencesScopes.push({});\n  }\n\n  popScope() {\n    this.variablesScopes.pop();\n    this.referencesScopes.pop();\n  }\n\n}\n","import {Environment} from \"../environment/Environment\";\nimport {Parser} from \"../parser/parsers\";\nimport {lexer} from \"../parser/lexer\";\nimport {observable} from \"mobx\";\n\n\nexport class SpreadsheetStore {\n\n  @observable annotations = []\n\n  constructor(x, y) {\n    this.env = new Environment(x, y);\n  }\n\n  reset() {\n    this.env.reset()\n  }\n\n  onCellSet(x, y, value) {\n    this.env.setCell(x, y, value);\n  }\n\n  cellsToObjects() {\n    const result = {};\n\n    for (let i = 0; i < this.env.y; i++) {\n      for (let j = 0; j < this.env.x; j++) {\n        const cell = this.env.getCell(j, i);\n        let x;\n        if (cell.formula) {\n          x = cell.formula\n        } else if (cell.value) {\n          x = cell.value;\n        } else {\n          continue;\n        }\n        result[cell.label] = x;\n      }\n    }\n    return result\n  }\n\n  run(code) {\n    this.annotations = []\n    if (code === \"\") {\n      return;\n    }\n    try {\n      const parser = new Parser();\n      parser.feed(code);\n      if (parser.results) {\n        for (const line of parser.results) {\n          line.exec(this.env);\n        }\n      }\n    } catch (e) {\n      if (e.name !== \"UserError\") {\n        throw e;\n      }\n\n      const regex = /.*line (\\d*).*col (\\d*)/gm;\n\n      const m = regex.exec(e.message)\n      if (m !== null) {\n        const line = parseInt(m[1]) - 1\n        const col = parseInt(m[2])\n        const lines = e.message.split(\"\\n\");\n        const n = Math.min(5, lines.length)\n        let message = \"\"\n        if (4 in lines) {\n          lines[4] = lines[4].substring(0, lines[4].indexOf(\"Instead\"));\n        }\n        for (let i = 0; i < n; i++) {\n          message += lines[i] + '\\n'\n        }\n        this.annotations = [{row: line, column: col, type: 'error', text: message}];\n      } else {\n        this.annotations = [{row: 0, column: 0, type: 'error', text: e.message}];\n      }\n      console.log(e.message)\n    }\n  }\n\n  logParseTree(code) {\n    this.annotations = []\n    try {\n      const parser = new Parser();\n      parser.feed(code);\n      console.log(parser.results);\n    } catch (e) {\n      if (e.name !== \"UserError\") {\n        throw e;\n      }\n      console.log(e.message);\n    }\n  }\n\n  logLexerOutput(code) {\n    this.annotations = []\n    try {\n      lexer.reset(code);\n      const result = [];\n      let tok = lexer.next();\n      while (tok !== undefined) {\n        result.push(tok);\n        tok = lexer.next()\n      }\n      console.log(result);\n    } catch (e) {\n      if (e.name !== \"UserError\") {\n        throw e;\n      }\n\n      console.log(e.message);\n    }\n  }\n\n}\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Editor.module.scss';\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/theme-cobalt\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/webpack-resolver\";\nimport {store} from \"./App\";\nimport {observer} from \"mobx-react\";\n\n\nconst Editor = props => {\n\n  let [code, setCodeState] = useState(\"\");\n\n  // todo document this\n  const setCode = (code) => {\n    if (code[code.length - 1] !== '\\n') {\n      code += '\\n';\n    }\n    setCodeState(code);\n  }\n\n  const onLoad = e => {\n\n    const file = e.target.files[0];\n    const fr = new FileReader();\n\n    fr.addEventListener('load', e => {\n      const text = e.target.result;\n      const o = JSON.parse(text);\n\n      const code = o.code;\n      const cells = o.cells\n\n      setCode(code);\n      props.onSubmit(code)\n      props.onLoad(cells)\n    })\n    fr.readAsText(file);\n\n  };\n\n  return (\n    <div className={style.Editor}>\n\n      <div className={style.Top}>\n        <label className={style.customFileUpload}>Open<input type=\"file\" onChange={onLoad}/> </label>\n        <button onClick={() => props.onSave(code)}>Save</button>\n      </div>\n\n      <AceEditor\n        mode=\"python\"\n        theme=\"cobalt\"\n        onChange={setCode}\n        value={code}\n        height={'100%'}\n        width={'100%'}\n        annotations={store.annotations}\n      />\n      <div className={style.Bottom}>\n        <button onClick={() => props.onLogParseTree(code)}>Log parse tree</button>\n        <button onClick={() => props.onLogLexerOutput(code)}>Log tokens</button>\n        <button onClick={() => props.onSubmit(code)}>Run</button>\n      </div>\n    </div>\n  );\n};\n\nEditor.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  onLoad: PropTypes.func.isRequired,\n  onLogLexerOutput: PropTypes.func.isRequired,\n  onLogParseTree: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  annotations: PropTypes.array,\n};\n\n\nexport default observer(Editor);\n","/* eslint-disable no-eval */\nimport React from 'react';\nimport Spreadsheet from \"./Spreadsheet\";\nimport {SpreadsheetStore} from \"../mobx/SpreadsheetStore\";\nimport style from './App.module.scss';\nimport Editor from \"./Editor\";\nimport {saveAs} from 'file-saver';\nimport {getCellIndexes} from \"../utils\";\nimport {observer} from \"mobx-react\";\n\n\nconst x = 5;\nconst y = 30;\n\nexport const store = new SpreadsheetStore(x, y);\n\nfunction onSave(code,store) {\n  const cells = store.cellsToObjects();\n  const o = {\n    'cells': cells,\n    'code': code,\n  };\n  const blob = new Blob([JSON.stringify(o,null,1)], {\n    type:'text/plain;charset=utf-8'\n  })\n  saveAs(blob, \"spreadsheet.txt\");\n}\n\nfunction onLoad(cells) {\n  store.reset()\n\n  for (const p in cells) {\n    if (cells.hasOwnProperty(p)) {\n      try{\n        const indexes = getCellIndexes(p);\n        const x = indexes.x;\n        const y = indexes.y;\n        store.onCellSet(x,y,cells[p])\n      }\n      catch (e) {\n\n      }\n    }\n  }\n}\n\nfunction App() {\n\n  // useEffect(populateSheet, []);\n\n  return (\n    <div className={style.App}>\n      <Spreadsheet\n        x={store.env.x}\n        y={store.env.y}\n        cells={store.env.cells}\n        onCellSet={(x,y,v) => store.onCellSet(x,y,v)}\n      />\n      <Editor\n        onLoad={cells=>onLoad(cells)}\n        onSave={x=>onSave(x,store)}\n        onSubmit={(code) => store.run(code)}\n        onLogLexerOutput={(code) => store.logLexerOutput(code)}\n        onLogParseTree={(code) => store.logParseTree(code)}\n      />\n    </div>\n  );\n}\n\nexport default observer(App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const returnMessage = \"Return in unexpected place\"\n\nexport class UserError extends Error {\n  constructor(...params) {\n    super(...params);\n    this.name = \"UserError\";\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, UserError);\n    }\n  }\n}\n\nexport class returnHandler extends Error {\n  constructor(result,...params) {\n    super(...params);\n    this.result = result;\n    this.name = \"returnHandler\";\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, UserError);\n    }\n  }\n}\n"],"sourceRoot":""}